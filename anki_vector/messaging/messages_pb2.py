# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: anki_vector/messaging/messages.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from anki_vector.messaging import response_status_pb2 as anki__vector_dot_messaging_dot_response__status__pb2
from anki_vector.messaging import extensions_pb2 as anki__vector_dot_messaging_dot_extensions__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='anki_vector/messaging/messages.proto',
  package='Anki.Vector.external_interface',
  syntax='proto3',
  serialized_pb=_b('\n$anki_vector/messaging/messages.proto\x12\x1e\x41nki.Vector.external_interface\x1a+anki_vector/messaging/response_status.proto\x1a&anki_vector/messaging/extensions.proto\"\x0f\n\rKeepAlivePing\"\x19\n\tAnimation\x12\x0c\n\x04name\x18\x01 \x01(\t\"|\n\x12\x44riveWheelsRequest\x12\x17\n\x0fleft_wheel_mmps\x18\x01 \x01(\x02\x12\x18\n\x10right_wheel_mmps\x18\x02 \x01(\x02\x12\x18\n\x10left_wheel_mmps2\x18\x03 \x01(\x02\x12\x19\n\x11right_wheel_mmps2\x18\x04 \x01(\x02\"U\n\x13\x44riveWheelsResponse\x12>\n\x06status\x18\x01 \x01(\x0b\x32..Anki.Vector.external_interface.ResponseStatus\",\n\x0fMoveHeadRequest\x12\x19\n\x11speed_rad_per_sec\x18\x01 \x01(\x02\"R\n\x10MoveHeadResponse\x12>\n\x06status\x18\x01 \x01(\x0b\x32..Anki.Vector.external_interface.ResponseStatus\",\n\x0fMoveLiftRequest\x12\x19\n\x11speed_rad_per_sec\x18\x01 \x01(\x02\"R\n\x10MoveLiftResponse\x12>\n\x06status\x18\x01 \x01(\x0b\x32..Anki.Vector.external_interface.ResponseStatus\"\xb4\x01\n\x14PlayAnimationRequest\x12<\n\tanimation\x18\x01 \x01(\x0b\x32).Anki.Vector.external_interface.Animation\x12\r\n\x05loops\x18\x02 \x01(\r\x12\x19\n\x11ignore_body_track\x18\x03 \x01(\x08\x12\x19\n\x11ignore_head_track\x18\x04 \x01(\x08\x12\x19\n\x11ignore_lift_track\x18\x05 \x01(\x08\"\x98\x01\n\x15PlayAnimationResponse\x12>\n\x06status\x18\x01 \x01(\x0b\x32..Anki.Vector.external_interface.ResponseStatus\x12?\n\x06result\x18\x02 \x01(\x0e\x32/.Anki.Vector.external_interface.BehaviorResults\"\x17\n\x15ListAnimationsRequest\"\x9c\x01\n\x16ListAnimationsResponse\x12>\n\x06status\x18\x01 \x01(\x0b\x32..Anki.Vector.external_interface.ResponseStatus\x12\x42\n\x0f\x61nimation_names\x18\x02 \x03(\x0b\x32).Anki.Vector.external_interface.Animation\"_\n\x1a\x44isplayFaceImageRGBRequest\x12\x11\n\tface_data\x18\x01 \x01(\x0c\x12\x13\n\x0b\x64uration_ms\x18\x02 \x01(\r\x12\x19\n\x11interrupt_running\x18\x03 \x01(\x08\"]\n\x1b\x44isplayFaceImageRGBResponse\x12>\n\x06status\x18\x01 \x01(\x0b\x32..Anki.Vector.external_interface.ResponseStatus\"\x1b\n\x19MeetVictorFaceScanStarted\"\x1c\n\x1aMeetVictorFaceScanComplete\"\xbf\x02\n\x06Status\x12\x62\n\x1dmeet_victor_face_scan_started\x18\x02 \x01(\x0b\x32\x39.Anki.Vector.external_interface.MeetVictorFaceScanStartedH\x00\x12\x64\n\x1emeet_victor_face_scan_complete\x18\x03 \x01(\x0b\x32:.Anki.Vector.external_interface.MeetVictorFaceScanCompleteH\x00\x12\\\n\x19\x66\x61\x63\x65_enrollment_completed\x18\x04 \x01(\x0b\x32\x37.Anki.Vector.external_interface.FaceEnrollmentCompletedH\x00\x42\r\n\x0bstatus_type\"\xac\x01\n\x08WakeWord\x12H\n\x0fwake_word_begin\x18\x01 \x01(\x0b\x32-.Anki.Vector.external_interface.WakeWordBeginH\x00\x12\x44\n\rwake_word_end\x18\x02 \x01(\x0b\x32+.Anki.Vector.external_interface.WakeWordEndH\x00\x42\x10\n\x0ewake_word_type\"b\n\x11TimeStampedStatus\x12\x36\n\x06status\x18\x01 \x01(\x0b\x32&.Anki.Vector.external_interface.Status\x12\x15\n\rtimestamp_utc\x18\x02 \x01(\r\"p\n\nPoseStruct\x12\t\n\x01x\x18\x01 \x01(\x02\x12\t\n\x01y\x18\x02 \x01(\x02\x12\t\n\x01z\x18\x03 \x01(\x02\x12\n\n\x02q0\x18\x04 \x01(\x02\x12\n\n\x02q1\x18\x05 \x01(\x02\x12\n\n\x02q2\x18\x06 \x01(\x02\x12\n\n\x02q3\x18\x07 \x01(\x02\x12\x11\n\torigin_id\x18\x08 \x01(\r\",\n\tAccelData\x12\t\n\x01x\x18\x01 \x01(\x02\x12\t\n\x01y\x18\x02 \x01(\x02\x12\t\n\x01z\x18\x03 \x01(\x02\"+\n\x08GyroData\x12\t\n\x01x\x18\x01 \x01(\x02\x12\t\n\x01y\x18\x02 \x01(\x02\x12\t\n\x01z\x18\x03 \x01(\x02\"\xa3\x01\n\x08ProxData\x12\x13\n\x0b\x64istance_mm\x18\x01 \x01(\r\x12\x16\n\x0esignal_quality\x18\x02 \x01(\x02\x12\x19\n\x11is_in_valid_range\x18\x03 \x01(\x08\x12\x1f\n\x17is_valid_signal_quality\x18\x04 \x01(\x08\x12\x16\n\x0eis_lift_in_fov\x18\x05 \x01(\x08\x12\x16\n\x0eis_too_pitched\x18\x06 \x01(\x08\">\n\tTouchData\x12\x17\n\x0fraw_touch_value\x18\x01 \x01(\r\x12\x18\n\x10is_being_touched\x18\x02 \x01(\x08\"\x82\x05\n\nRobotState\x12\x38\n\x04pose\x18\x01 \x01(\x0b\x32*.Anki.Vector.external_interface.PoseStruct\x12\x16\n\x0epose_angle_rad\x18\x02 \x01(\x02\x12\x16\n\x0epose_pitch_rad\x18\x03 \x01(\x02\x12\x1d\n\x15left_wheel_speed_mmps\x18\x04 \x01(\x02\x12\x1e\n\x16right_wheel_speed_mmps\x18\x05 \x01(\x02\x12\x16\n\x0ehead_angle_rad\x18\x06 \x01(\x02\x12\x16\n\x0elift_height_mm\x18\x07 \x01(\x02\x12\x38\n\x05\x61\x63\x63\x65l\x18\x08 \x01(\x0b\x32).Anki.Vector.external_interface.AccelData\x12\x36\n\x04gyro\x18\t \x01(\x0b\x32(.Anki.Vector.external_interface.GyroData\x12\x1a\n\x12\x63\x61rrying_object_id\x18\n \x01(\x05\x12!\n\x19\x63\x61rrying_object_on_top_id\x18\x0b \x01(\x05\x12\x1f\n\x17head_tracking_object_id\x18\x0c \x01(\x05\x12\x1e\n\x16localized_to_object_id\x18\r \x01(\x05\x12\x1d\n\x15last_image_time_stamp\x18\x0e \x01(\r\x12\x0e\n\x06status\x18\x0f \x01(\r\x12;\n\tprox_data\x18\x10 \x01(\x0b\x32(.Anki.Vector.external_interface.ProxData\x12=\n\ntouch_data\x18\x11 \x01(\x0b\x32).Anki.Vector.external_interface.TouchData\"!\n\tCladPoint\x12\t\n\x01x\x18\x01 \x01(\x02\x12\t\n\x01y\x18\x02 \x01(\x02\"Q\n\x08\x43ladRect\x12\x12\n\nx_top_left\x18\x01 \x01(\x02\x12\x12\n\ny_top_left\x18\x02 \x01(\x02\x12\r\n\x05width\x18\x03 \x01(\x02\x12\x0e\n\x06height\x18\x04 \x01(\x02\"\x8a\x04\n\x11RobotObservedFace\x12\x0f\n\x07\x66\x61\x63\x65_id\x18\x01 \x01(\x05\x12\x11\n\ttimestamp\x18\x02 \x01(\r\x12\x38\n\x04pose\x18\x03 \x01(\x0b\x32*.Anki.Vector.external_interface.PoseStruct\x12:\n\x08img_rect\x18\x04 \x01(\x0b\x32(.Anki.Vector.external_interface.CladRect\x12\x0c\n\x04name\x18\x05 \x01(\t\x12\x44\n\nexpression\x18\x06 \x01(\x0e\x32\x30.Anki.Vector.external_interface.FacialExpression\x12\x19\n\x11\x65xpression_values\x18\x07 \x03(\r\x12;\n\x08left_eye\x18\x08 \x03(\x0b\x32).Anki.Vector.external_interface.CladPoint\x12<\n\tright_eye\x18\t \x03(\x0b\x32).Anki.Vector.external_interface.CladPoint\x12\x37\n\x04nose\x18\n \x03(\x0b\x32).Anki.Vector.external_interface.CladPoint\x12\x38\n\x05mouth\x18\x0b \x03(\x0b\x32).Anki.Vector.external_interface.CladPoint\"<\n\x1aRobotChangedObservedFaceID\x12\x0e\n\x06old_id\x18\x01 \x01(\x05\x12\x0e\n\x06new_id\x18\x02 \x01(\x05\"~\n\x17\x46\x61\x63\x65\x45nrollmentCompleted\x12\x44\n\x06result\x18\x01 \x01(\x0e\x32\x34.Anki.Vector.external_interface.FaceEnrollmentResult\x12\x0f\n\x07\x66\x61\x63\x65_id\x18\x02 \x01(\x05\x12\x0c\n\x04name\x18\x03 \x01(\t\"\x1d\n\x1b\x43\x61ncelFaceEnrollmentRequest\"^\n\x1c\x43\x61ncelFaceEnrollmentResponse\x12>\n\x06status\x18\x01 \x01(\x0b\x32..Anki.Vector.external_interface.ResponseStatus\"\x1d\n\x1bRequestEnrolledNamesRequest\"\xc2\x01\n\x0fLoadedKnownFace\x12$\n\x1cseconds_since_first_enrolled\x18\x01 \x01(\x03\x12\"\n\x1aseconds_since_last_updated\x18\x02 \x01(\x03\x12\x1f\n\x17seconds_since_last_seen\x18\x03 \x01(\x03\x12%\n\x1dlast_seen_seconds_since_epoch\x18\x04 \x01(\x03\x12\x0f\n\x07\x66\x61\x63\x65_id\x18\x05 \x01(\x05\x12\x0c\n\x04name\x18\x06 \x01(\t\"9\n\x18RobotRenamedEnrolledFace\x12\x0f\n\x07\x66\x61\x63\x65_id\x18\x01 \x01(\x05\x12\x0c\n\x04name\x18\x02 \x01(\t\"\x9e\x01\n\x1cRequestEnrolledNamesResponse\x12>\n\x06status\x18\x01 \x01(\x0b\x32..Anki.Vector.external_interface.ResponseStatus\x12>\n\x05\x66\x61\x63\x65s\x18\x02 \x03(\x0b\x32/.Anki.Vector.external_interface.LoadedKnownFace\"T\n\x1dUpdateEnrolledFaceByIDRequest\x12\x0f\n\x07\x66\x61\x63\x65_id\x18\x01 \x01(\x05\x12\x10\n\x08old_name\x18\x02 \x01(\t\x12\x10\n\x08new_name\x18\x03 \x01(\t\"`\n\x1eUpdateEnrolledFaceByIDResponse\x12>\n\x06status\x18\x01 \x01(\x0b\x32..Anki.Vector.external_interface.ResponseStatus\"/\n\x1c\x45raseEnrolledFaceByIDRequest\x12\x0f\n\x07\x66\x61\x63\x65_id\x18\x01 \x01(\x05\"_\n\x1d\x45raseEnrolledFaceByIDResponse\x12>\n\x06status\x18\x01 \x01(\x0b\x32..Anki.Vector.external_interface.ResponseStatus\"\x1e\n\x1c\x45raseAllEnrolledFacesRequest\"_\n\x1d\x45raseAllEnrolledFacesResponse\x12>\n\x06status\x18\x01 \x01(\x0b\x32..Anki.Vector.external_interface.ResponseStatus\"\x88\x01\n\x16SetFaceToEnrollRequest\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\x13\n\x0bobserved_id\x18\x02 \x01(\x05\x12\x0f\n\x07save_id\x18\x03 \x01(\x05\x12\x15\n\rsave_to_robot\x18\x04 \x01(\x08\x12\x10\n\x08say_name\x18\x05 \x01(\x08\x12\x11\n\tuse_music\x18\x06 \x01(\x08\"Y\n\x17SetFaceToEnrollResponse\x12>\n\x06status\x18\x01 \x01(\x0b\x32..Anki.Vector.external_interface.ResponseStatus\"\x18\n\x16\x44riveOffChargerRequest\"\x9a\x01\n\x17\x44riveOffChargerResponse\x12>\n\x06status\x18\x01 \x01(\x0b\x32..Anki.Vector.external_interface.ResponseStatus\x12?\n\x06result\x18\x02 \x01(\x0e\x32/.Anki.Vector.external_interface.BehaviorResults\"\x17\n\x15\x44riveOnChargerRequest\"\x99\x01\n\x16\x44riveOnChargerResponse\x12>\n\x06status\x18\x01 \x01(\x0b\x32..Anki.Vector.external_interface.ResponseStatus\x12?\n\x06result\x18\x02 \x01(\x0e\x32/.Anki.Vector.external_interface.BehaviorResults\"\x0f\n\rWakeWordBegin\"8\n\x0bWakeWordEnd\x12\x14\n\x0cintent_heard\x18\x01 \x01(\x08\x12\x13\n\x0bintent_json\x18\x02 \x01(\t\"n\n\tPhotoInfo\x12\x10\n\x08photo_id\x18\x01 \x01(\r\x12\x15\n\rtimestamp_utc\x18\x02 \x01(\r\x12\x1b\n\x13photo_copied_to_app\x18\x03 \x01(\x08\x12\x1b\n\x13thumb_copied_to_app\x18\x04 \x01(\x08\"\x13\n\x11PhotosInfoRequest\"\x94\x01\n\x12PhotosInfoResponse\x12>\n\x06status\x18\x01 \x01(\x0b\x32..Anki.Vector.external_interface.ResponseStatus\x12>\n\x0bphoto_infos\x18\x02 \x03(\x0b\x32).Anki.Vector.external_interface.PhotoInfo\" \n\x0cPhotoRequest\x12\x10\n\x08photo_id\x18\x01 \x01(\r\"6\n\x10PhotoPathMessage\x12\x0f\n\x07success\x18\x01 \x01(\x08\x12\x11\n\tfull_path\x18\x02 \x01(\t\"o\n\rPhotoResponse\x12>\n\x06status\x18\x01 \x01(\x0b\x32..Anki.Vector.external_interface.ResponseStatus\x12\x0f\n\x07success\x18\x02 \x01(\x08\x12\r\n\x05image\x18\x03 \x01(\x0c\"$\n\x10ThumbnailRequest\x12\x10\n\x08photo_id\x18\x01 \x01(\r\":\n\x14ThumbnailPathMessage\x12\x0f\n\x07success\x18\x01 \x01(\x08\x12\x11\n\tfull_path\x18\x02 \x01(\t\"s\n\x11ThumbnailResponse\x12>\n\x06status\x18\x01 \x01(\x0b\x32..Anki.Vector.external_interface.ResponseStatus\x12\x0f\n\x07success\x18\x02 \x01(\x08\x12\r\n\x05image\x18\x03 \x01(\x0c\"&\n\x12\x44\x65letePhotoRequest\x12\x10\n\x08photo_id\x18\x01 \x01(\r\"f\n\x13\x44\x65letePhotoResponse\x12>\n\x06status\x18\x01 \x01(\x0b\x32..Anki.Vector.external_interface.ResponseStatus\x12\x0f\n\x07success\x18\x02 \x01(\x08\"\x1e\n\nPhotoTaken\x12\x10\n\x08photo_id\x18\x01 \x01(\r\"\xc1\x02\n\x11PathMotionProfile\x12\x12\n\nspeed_mmps\x18\x01 \x01(\x02\x12\x13\n\x0b\x61\x63\x63\x65l_mmps2\x18\x02 \x01(\x02\x12\x13\n\x0b\x64\x65\x63\x65l_mmps2\x18\x03 \x01(\x02\x12$\n\x1cpoint_turn_speed_rad_per_sec\x18\x04 \x01(\x02\x12%\n\x1dpoint_turn_accel_rad_per_sec2\x18\x05 \x01(\x02\x12%\n\x1dpoint_turn_decel_rad_per_sec2\x18\x06 \x01(\x02\x12\x17\n\x0f\x64ock_speed_mmps\x18\x07 \x01(\x02\x12\x18\n\x10\x64ock_accel_mmps2\x18\x08 \x01(\x02\x12\x18\n\x10\x64ock_decel_mmps2\x18\t \x01(\x02\x12\x1a\n\x12reverse_speed_mmps\x18\n \x01(\x02\x12\x11\n\tis_custom\x18\x0b \x01(\x08\"\xf8\x0c\n\x0c\x41\x63tionResult\x12K\n\x04\x63ode\x18\x01 \x01(\x0e\x32=.Anki.Vector.external_interface.ActionResult.ActionResultCode\"\x9a\x0c\n\x10\x41\x63tionResultCode\x12\x19\n\x15\x41\x43TION_RESULT_SUCCESS\x10\x00\x12\x1c\n\x15\x41\x43TION_RESULT_RUNNING\x10\x80\x80\x80\x08\x12,\n%ACTION_RESULT_CANCELLED_WHILE_RUNNING\x10\x80\x80\x80\x10\x12\x12\n\x0bNOT_STARTED\x10\x81\x80\x80\x10\x12\x0c\n\x05\x41\x42ORT\x10\x80\x80\x80\x18\x12\x13\n\x0c\x41NIM_ABORTED\x10\x81\x80\x80\x18\x12\x11\n\nBAD_MARKER\x10\x82\x80\x80\x18\x12\x16\n\x0f\x42\x41\x44_MESSAGE_TAG\x10\x83\x80\x80\x18\x12\x11\n\nBAD_OBJECT\x10\x84\x80\x80\x18\x12\x0f\n\x08\x42\x41\x44_POSE\x10\x85\x80\x80\x18\x12\x0e\n\x07\x42\x41\x44_TAG\x10\x86\x80\x80\x18\x12\x1e\n\x17\x43HARGER_UNPLUGGED_ABORT\x10\x87\x80\x80\x18\x12!\n\x1a\x43LIFF_ALIGN_FAILED_TIMEOUT\x10\x88\x80\x80\x18\x12$\n\x1d\x43LIFF_ALIGN_FAILED_NO_TURNING\x10\x89\x80\x80\x18\x12&\n\x1f\x43LIFF_ALIGN_FAILED_OVER_TURNING\x10\x8a\x80\x80\x18\x12\"\n\x1b\x43LIFF_ALIGN_FAILED_NO_WHITE\x10\x8b\x80\x80\x18\x12!\n\x1a\x43LIFF_ALIGN_FAILED_STOPPED\x10\x8c\x80\x80\x18\x12!\n\x1a\x46\x41ILED_SETTING_CALIBRATION\x10\x8d\x80\x80\x18\x12(\n!FOLLOWING_PATH_BUT_NOT_TRAVERSING\x10\x8e\x80\x80\x18\x12\x12\n\x0bINTERRUPTED\x10\x8f\x80\x80\x18\x12\x1f\n\x18INVALID_OFF_TREADS_STATE\x10\x90\x80\x80\x18\x12\x19\n\x12MISMATCHED_UP_AXIS\x10\x91\x80\x80\x18\x12\x13\n\x0cNO_ANIM_NAME\x10\x92\x80\x80\x18\x12\x16\n\x0fNO_DISTANCE_SET\x10\x93\x80\x80\x18\x12\x0e\n\x07NO_FACE\x10\x94\x80\x80\x18\x12\x12\n\x0bNO_GOAL_SET\x10\x95\x80\x80\x18\x12\x19\n\x12NO_PREACTION_POSES\x10\x96\x80\x80\x18\x12 \n\x19NOT_CARRYING_OBJECT_ABORT\x10\x97\x80\x80\x18\x12\x1b\n\x14NOT_ON_CHARGER_ABORT\x10\x98\x80\x80\x18\x12\x15\n\x0eNULL_SUBACTION\x10\x99\x80\x80\x18\x12!\n\x1aPATH_PLANNING_FAILED_ABORT\x10\x9a\x80\x80\x18\x12(\n!PICKUP_OBJECT_UNEXPECTEDLY_MOVING\x10\x9b\x80\x80\x18\x12#\n\x1cSEND_MESSAGE_TO_ROBOT_FAILED\x10\x9c\x80\x80\x18\x12\x1c\n\x15STILL_CARRYING_OBJECT\x10\x9d\x80\x80\x18\x12\x0e\n\x07TIMEOUT\x10\x9e\x80\x80\x18\x12\x14\n\rTRACKS_LOCKED\x10\x9f\x80\x80\x18\x12\x1d\n\x16UNEXPECTED_DOCK_ACTION\x10\xa0\x80\x80\x18\x12\x18\n\x11UNKNOWN_TOOL_CODE\x10\xa1\x80\x80\x18\x12\x1c\n\x15UPDATE_DERIVED_FAILED\x10\xa2\x80\x80\x18\x12 \n\x19VISUAL_OBSERVATION_FAILED\x10\xa3\x80\x80\x18\x12 \n\x19SHOULDNT_DRIVE_ON_CHARGER\x10\xa4\x80\x80\x18\x12\x0c\n\x05RETRY\x10\x80\x80\x80 \x12#\n\x1c\x44ID_NOT_REACH_PREACTION_POSE\x10\x81\x80\x80 \x12\x1d\n\x16\x46\x41ILED_TRAVERSING_PATH\x10\x82\x80\x80 \x12!\n\x1aLAST_PICK_AND_PLACE_FAILED\x10\x83\x80\x80 \x12$\n\x1dMOTOR_STOPPED_MAKING_PROGRESS\x10\x84\x80\x80 \x12 \n\x19NOT_CARRYING_OBJECT_RETRY\x10\x85\x80\x80 \x12\x1b\n\x14NOT_ON_CHARGER_RETRY\x10\x86\x80\x80 \x12!\n\x1aPATH_PLANNING_FAILED_RETRY\x10\x87\x80\x80 \x12\x1e\n\x17PLACEMENT_GOAL_NOT_FREE\x10\x88\x80\x80 \x12,\n%PICKUP_OBJECT_UNEXPECTEDLY_NOT_MOVING\x10\x89\x80\x80 \x12\x17\n\x10STILL_ON_CHARGER\x10\x8a\x80\x80 \x12\x1d\n\x16UNEXPECTED_PITCH_ANGLE\x10\x8b\x80\x80 \"\xa7\x01\n\x0fGoToPoseRequest\x12\x0c\n\x04x_mm\x18\x01 \x01(\x02\x12\x0c\n\x04y_mm\x18\x02 \x01(\x02\x12\x0b\n\x03rad\x18\x03 \x01(\x02\x12\x46\n\x0bmotion_prof\x18\x04 \x01(\x0b\x32\x31.Anki.Vector.external_interface.PathMotionProfile\x12\x0e\n\x06id_tag\x18\x05 \x01(\x05\x12\x13\n\x0bnum_retries\x18\x06 \x01(\x05\"\x90\x01\n\x10GoToPoseResponse\x12>\n\x06status\x18\x01 \x01(\x0b\x32..Anki.Vector.external_interface.ResponseStatus\x12<\n\x06result\x18\x02 \x01(\x0b\x32,.Anki.Vector.external_interface.ActionResult\"\xd0\x02\n\x13\x44ockWithCubeRequest\x12\x11\n\tobject_id\x18\x01 \x01(\x05\x12\x1f\n\x17\x64istance_from_marker_mm\x18\x02 \x01(\x02\x12\x1a\n\x12\x61pproach_angle_rad\x18\x03 \x01(\x02\x12\x45\n\x0e\x61lignment_type\x18\x04 \x01(\x0e\x32-.Anki.Vector.external_interface.AlignmentType\x12\x1a\n\x12use_approach_angle\x18\x05 \x01(\x08\x12\x19\n\x11use_pre_dock_pose\x18\x06 \x01(\x08\x12\x46\n\x0bmotion_prof\x18\x07 \x01(\x0b\x32\x31.Anki.Vector.external_interface.PathMotionProfile\x12\x0e\n\x06id_tag\x18\x08 \x01(\x05\x12\x13\n\x0bnum_retries\x18\t \x01(\x05\"\x94\x01\n\x14\x44ockWithCubeResponse\x12>\n\x06status\x18\x01 \x01(\x0b\x32..Anki.Vector.external_interface.ResponseStatus\x12<\n\x06result\x18\x02 \x01(\x0b\x32,.Anki.Vector.external_interface.ActionResult\"\x7f\n\x14\x44riveStraightRequest\x12\x12\n\nspeed_mmps\x18\x01 \x01(\x02\x12\x0f\n\x07\x64ist_mm\x18\x02 \x01(\x02\x12\x1d\n\x15should_play_animation\x18\x03 \x01(\x08\x12\x0e\n\x06id_tag\x18\x04 \x01(\x05\x12\x13\n\x0bnum_retries\x18\x05 \x01(\x05\"\x95\x01\n\x15\x44riveStraightResponse\x12>\n\x06status\x18\x01 \x01(\x0b\x32..Anki.Vector.external_interface.ResponseStatus\x12<\n\x06result\x18\x02 \x01(\x0b\x32,.Anki.Vector.external_interface.ActionResult\"\xa9\x01\n\x12TurnInPlaceRequest\x12\x11\n\tangle_rad\x18\x01 \x01(\x02\x12\x19\n\x11speed_rad_per_sec\x18\x02 \x01(\x02\x12\x1a\n\x12\x61\x63\x63\x65l_rad_per_sec2\x18\x03 \x01(\x02\x12\x0f\n\x07tol_rad\x18\x04 \x01(\x02\x12\x13\n\x0bis_absolute\x18\x05 \x01(\r\x12\x0e\n\x06id_tag\x18\x06 \x01(\x05\x12\x13\n\x0bnum_retries\x18\x07 \x01(\x05\"\x93\x01\n\x13TurnInPlaceResponse\x12>\n\x06status\x18\x01 \x01(\x0b\x32..Anki.Vector.external_interface.ResponseStatus\x12<\n\x06result\x18\x02 \x01(\x0b\x32,.Anki.Vector.external_interface.ActionResult\"\x9e\x01\n\x13SetHeadAngleRequest\x12\x11\n\tangle_rad\x18\x01 \x01(\x02\x12\x1d\n\x15max_speed_rad_per_sec\x18\x02 \x01(\x02\x12\x1a\n\x12\x61\x63\x63\x65l_rad_per_sec2\x18\x03 \x01(\x02\x12\x14\n\x0c\x64uration_sec\x18\x04 \x01(\x02\x12\x0e\n\x06id_tag\x18\x05 \x01(\x05\x12\x13\n\x0bnum_retries\x18\x06 \x01(\x05\"\x94\x01\n\x14SetHeadAngleResponse\x12>\n\x06status\x18\x01 \x01(\x0b\x32..Anki.Vector.external_interface.ResponseStatus\x12<\n\x06result\x18\x02 \x01(\x0b\x32,.Anki.Vector.external_interface.ActionResult\"\x9f\x01\n\x14SetLiftHeightRequest\x12\x11\n\theight_mm\x18\x01 \x01(\x02\x12\x1d\n\x15max_speed_rad_per_sec\x18\x02 \x01(\x02\x12\x1a\n\x12\x61\x63\x63\x65l_rad_per_sec2\x18\x03 \x01(\x02\x12\x14\n\x0c\x64uration_sec\x18\x04 \x01(\x02\x12\x0e\n\x06id_tag\x18\x05 \x01(\x05\x12\x13\n\x0bnum_retries\x18\x06 \x01(\x05\"\x95\x01\n\x15SetLiftHeightResponse\x12>\n\x06status\x18\x01 \x01(\x0b\x32..Anki.Vector.external_interface.ResponseStatus\x12<\n\x06result\x18\x02 \x01(\x0b\x32,.Anki.Vector.external_interface.ActionResult\"\xb9\x03\n\x0cNetworkStats\x12#\n\x1bg_net_stat1_num_connections\x18\x01 \x01(\x05\x12\x1f\n\x17g_net_stat2_latency_avg\x18\x02 \x01(\x02\x12\x1e\n\x16g_net_stat3_latency_sd\x18\x03 \x01(\x02\x12\x1f\n\x17g_net_stat4_latency_min\x18\x04 \x01(\x02\x12\x1f\n\x17g_net_stat5_latency_max\x18\x05 \x01(\x02\x12#\n\x1bg_net_stat6_ping_arrived_pc\x18\x06 \x01(\x02\x12%\n\x1dg_net_stat7_ext_queued_avg_ms\x18\x07 \x01(\x02\x12%\n\x1dg_net_stat8_ext_queued_min_ms\x18\x08 \x01(\x02\x12%\n\x1dg_net_stat9_ext_queued_max_ms\x18\t \x01(\x02\x12!\n\x19g_net_stata_queued_avg_ms\x18\n \x01(\x02\x12!\n\x19g_net_statb_queued_min_ms\x18\x0b \x01(\x02\x12!\n\x19g_net_statc_queued_max_ms\x18\x0c \x01(\x02\"\x15\n\x13\x42\x61tteryStateRequest\"\xc9\x02\n\x14\x42\x61tteryStateResponse\x12>\n\x06status\x18\x01 \x01(\x0b\x32..Anki.Vector.external_interface.ResponseStatus\x12\x43\n\rbattery_level\x18\x02 \x01(\x0e\x32,.Anki.Vector.external_interface.BatteryLevel\x12\x15\n\rbattery_volts\x18\x03 \x01(\x02\x12\x13\n\x0bis_charging\x18\x04 \x01(\x08\x12\x1e\n\x16is_on_charger_platform\x18\x05 \x01(\x08\x12\x1d\n\x15suggested_charger_sec\x18\x06 \x01(\x02\x12\x41\n\x0c\x63ube_battery\x18\x07 \x01(\x0b\x32+.Anki.Vector.external_interface.CubeBattery\"\xd3\x01\n\x0b\x43ubeBattery\x12K\n\x05level\x18\x01 \x01(\x0e\x32<.Anki.Vector.external_interface.CubeBattery.CubeBatteryLevel\x12\x12\n\nfactory_id\x18\x02 \x01(\t\x12\x15\n\rbattery_volts\x18\x03 \x01(\x02\x12#\n\x1btime_since_last_reading_sec\x18\x04 \x01(\x02\"\'\n\x10\x43ubeBatteryLevel\x12\x07\n\x03Low\x10\x00\x12\n\n\x06Normal\x10\x01\"\x15\n\x13VersionStateRequest\"\x83\x01\n\x14VersionStateResponse\x12>\n\x06status\x18\x01 \x01(\x0b\x32..Anki.Vector.external_interface.ResponseStatus\x12\x12\n\nos_version\x18\x02 \x01(\t\x12\x17\n\x0f\x65ngine_build_id\x18\x03 \x01(\t\"\x15\n\x13NetworkStateRequest\"\x9b\x01\n\x14NetworkStateResponse\x12>\n\x06status\x18\x01 \x01(\x0b\x32..Anki.Vector.external_interface.ResponseStatus\x12\x43\n\rnetwork_stats\x18\x02 \x01(\x0b\x32,.Anki.Vector.external_interface.NetworkStats\"Q\n\x0eSayTextRequest\x12\x0c\n\x04text\x18\x01 \x01(\t\x12\x18\n\x10use_vector_voice\x18\x02 \x01(\x08\x12\x17\n\x0f\x64uration_scalar\x18\x03 \x01(\x02\"\xf5\x01\n\x0fSayTextResponse\x12>\n\x06status\x18\x01 \x01(\x0b\x32..Anki.Vector.external_interface.ResponseStatus\x12M\n\x05state\x18\x02 \x01(\x0e\x32>.Anki.Vector.external_interface.SayTextResponse.UtteranceState\"S\n\x0eUtteranceState\x12\x0b\n\x07INVALID\x10\x00\x12\x0e\n\nGENERATING\x10\x01\x12\t\n\x05READY\x10\x02\x12\x0b\n\x07PLAYING\x10\x03\x12\x0c\n\x08\x46INISHED\x10\x04\"\x9b\x01\n\x0fStimulationInfo\x12\x16\n\x0e\x65motion_events\x18\x01 \x03(\t\x12\r\n\x05value\x18\x02 \x01(\x02\x12\x10\n\x08velocity\x18\x03 \x01(\x02\x12\r\n\x05\x61\x63\x63\x65l\x18\x04 \x01(\x02\x12\x1a\n\x12value_before_event\x18\x05 \x01(\x02\x12\x11\n\tmin_value\x18\x06 \x01(\x02\x12\x11\n\tmax_value\x18\x07 \x01(\x02\"Y\n\x14\x41udioSendModeRequest\x12\x41\n\x04mode\x18\x01 \x01(\x0e\x32\x33.Anki.Vector.external_interface.AudioProcessingMode\"Y\n\x14\x41udioSendModeChanged\x12\x41\n\x04mode\x18\x01 \x01(\x0e\x32\x33.Anki.Vector.external_interface.AudioProcessingMode\"\xe8\x01\n\nAudioChunk\x12\x18\n\x10robot_time_stamp\x18\x01 \x01(\r\x12\x10\n\x08group_id\x18\x02 \x01(\r\x12\x10\n\x08\x63hunk_id\x18\x03 \x01(\r\x12\x19\n\x11\x61udio_chunk_count\x18\x04 \x01(\r\x12\x14\n\x0csignal_power\x18\x05 \x01(\x0c\x12\x1b\n\x13\x64irection_strengths\x18\x06 \x01(\x0c\x12\x18\n\x10source_direction\x18\x07 \x01(\r\x12\x19\n\x11source_confidence\x18\x08 \x01(\r\x12\x19\n\x11noise_floor_power\x18\t \x01(\r\"\x12\n\x10\x41udioFeedRequest\"\xc8\x01\n\x11\x41udioFeedResponse\x12\x18\n\x10robot_time_stamp\x18\x01 \x01(\r\x12\x10\n\x08group_id\x18\x02 \x01(\r\x12\x14\n\x0csignal_power\x18\x03 \x01(\x0c\x12\x1b\n\x13\x64irection_strengths\x18\x04 \x01(\x0c\x12\x18\n\x10source_direction\x18\x05 \x01(\r\x12\x19\n\x11source_confidence\x18\x06 \x01(\r\x12\x19\n\x11noise_floor_power\x18\x07 \x01(\r:\x04\x80\xa6\x1d\x01\".\n\x1c\x45nableMarkerDetectionRequest\x12\x0e\n\x06\x65nable\x18\x01 \x01(\x08\"_\n\x1d\x45nableMarkerDetectionResponse\x12>\n\x06status\x18\x01 \x01(\x0b\x32..Anki.Vector.external_interface.ResponseStatus\"\xb1\x01\n\x1a\x45nableFaceDetectionRequest\x12\x0e\n\x06\x65nable\x18\x01 \x01(\x08\x12\x1e\n\x16\x65nable_smile_detection\x18\x02 \x01(\x08\x12$\n\x1c\x65nable_expression_estimation\x18\x03 \x01(\x08\x12\x1e\n\x16\x65nable_blink_detection\x18\x04 \x01(\x08\x12\x1d\n\x15\x65nable_gaze_detection\x18\x05 \x01(\x08\"]\n\x1b\x45nableFaceDetectionResponse\x12>\n\x06status\x18\x01 \x01(\x0b\x32..Anki.Vector.external_interface.ResponseStatus\".\n\x1c\x45nableMotionDetectionRequest\x12\x0e\n\x06\x65nable\x18\x01 \x01(\x08\"_\n\x1d\x45nableMotionDetectionResponse\x12>\n\x06status\x18\x01 \x01(\x0b\x32..Anki.Vector.external_interface.ResponseStatus\")\n\x17\x45nableMirrorModeRequest\x12\x0e\n\x06\x65nable\x18\x01 \x01(\x08\"Z\n\x18\x45nableMirrorModeResponse\x12>\n\x06status\x18\x01 \x01(\x0b\x32..Anki.Vector.external_interface.ResponseStatus\"\x14\n\x12MirrorModeDisabled\"-\n\x1b\x45nableImageStreamingRequest\x12\x0e\n\x06\x65nable\x18\x01 \x01(\x08\"^\n\x1c\x45nableImageStreamingResponse\x12>\n\x06status\x18\x01 \x01(\x0b\x32..Anki.Vector.external_interface.ResponseStatus\" \n\x1eIsImageStreamingEnabledRequest\"E\n\x1fIsImageStreamingEnabledResponse\x12\"\n\x1ais_image_streaming_enabled\x18\x01 \x01(\x08\"\x19\n\x17VisionModesAutoDisabled\"\xd1\x03\n\nImageChunk\x12\x18\n\x10\x66rame_time_stamp\x18\x01 \x01(\r\x12\x10\n\x08image_id\x18\x02 \x01(\r\x12\r\n\x05width\x18\x03 \x01(\r\x12\x0e\n\x06height\x18\x04 \x01(\r\x12P\n\x0eimage_encoding\x18\x05 \x01(\x0e\x32\x38.Anki.Vector.external_interface.ImageChunk.ImageEncoding\x12\x15\n\rdisplay_index\x18\x06 \x01(\r\x12\x19\n\x11image_chunk_count\x18\x07 \x01(\r\x12\x10\n\x08\x63hunk_id\x18\x08 \x01(\r\x12\x0c\n\x04\x64\x61ta\x18\t \x01(\x0c\"\xd3\x01\n\rImageEncoding\x12\x17\n\x13NONE_IMAGE_ENCODING\x10\x00\x12\x0c\n\x08RAW_GRAY\x10\x01\x12\x0b\n\x07RAW_RGB\x10\x02\x12\x08\n\x04YUYV\x10\x03\x12\x0c\n\x08YUV420SP\x10\x04\x12\t\n\x05\x42\x41YER\x10\x05\x12\r\n\tJPEG_GRAY\x10\x06\x12\x0e\n\nJPEG_COLOR\x10\x07\x12\x19\n\x15JPEG_COLOR_HALF_WIDTH\x10\x08\x12\x17\n\x13JPEG_MINIMIZED_GRAY\x10\t\x12\x18\n\x14JPEG_MINIMIZED_COLOR\x10\n\"\x13\n\x11\x43\x61meraFeedRequest\"\xa6\x01\n\x12\x43\x61meraFeedResponse\x12\x18\n\x10\x66rame_time_stamp\x18\x01 \x01(\r\x12\x10\n\x08image_id\x18\x02 \x01(\r\x12P\n\x0eimage_encoding\x18\x03 \x01(\x0e\x32\x38.Anki.Vector.external_interface.ImageChunk.ImageEncoding\x12\x0c\n\x04\x64\x61ta\x18\x04 \x01(\x0c:\x04\x80\xa6\x1d\x01\"5\n\x12SetEyeColorRequest\x12\x0b\n\x03hue\x18\x01 \x01(\x02\x12\x12\n\nsaturation\x18\x02 \x01(\x02\"U\n\x13SetEyeColorResponse\x12>\n\x06status\x18\x01 \x01(\x0b\x32..Anki.Vector.external_interface.ResponseStatus\"\x96\x01\n\x18SDKInitializationRequest\x12\x1a\n\x12sdk_module_version\x18\x01 \x01(\t\x12\x16\n\x0epython_version\x18\x02 \x01(\t\x12\x1d\n\x15python_implementation\x18\x03 \x01(\t\x12\x12\n\nos_version\x18\x04 \x01(\t\x12\x13\n\x0b\x63pu_version\x18\x05 \x01(\t\"[\n\x19SDKInitializationResponse\x12>\n\x06status\x18\x01 \x01(\x0b\x32..Anki.Vector.external_interface.ResponseStatus*\xdc\x04\n\x0bRobotStatus\x12\x15\n\x11ROBOT_STATUS_NONE\x10\x00\x12\x1a\n\x16ROBOT_STATUS_IS_MOVING\x10\x01\x12\"\n\x1eROBOT_STATUS_IS_CARRYING_BLOCK\x10\x02\x12&\n\"ROBOT_STATUS_IS_PICKING_OR_PLACING\x10\x04\x12\x1d\n\x19ROBOT_STATUS_IS_PICKED_UP\x10\x08\x12\"\n\x1eROBOT_STATUS_IS_BUTTON_PRESSED\x10\x10\x12\x1b\n\x17ROBOT_STATUS_IS_FALLING\x10 \x12\x1d\n\x19ROBOT_STATUS_IS_ANIMATING\x10@\x12\x1c\n\x17ROBOT_STATUS_IS_PATHING\x10\x80\x01\x12\x1d\n\x18ROBOT_STATUS_LIFT_IN_POS\x10\x80\x02\x12\x1d\n\x18ROBOT_STATUS_HEAD_IN_POS\x10\x80\x04\x12!\n\x1cROBOT_STATUS_CALM_POWER_MODE\x10\x80\x08\x12\x1f\n\x1aROBOT_STATUS_IS_ON_CHARGER\x10\x80 \x12\x1d\n\x18ROBOT_STATUS_IS_CHARGING\x10\x80@\x12!\n\x1bROBOT_STATUS_CLIFF_DETECTED\x10\x80\x80\x01\x12$\n\x1eROBOT_STATUS_ARE_WHEELS_MOVING\x10\x80\x80\x02\x12 \n\x1aROBOT_STATUS_IS_BEING_HELD\x10\x80\x80\x04\x12%\n\x1fROBOT_STATUS_IS_MOTION_DETECTED\x10\x80\x80\x08*\xbd\x01\n\x10\x46\x61\x63ialExpression\x12\x16\n\x12\x45XPRESSION_UNKNOWN\x10\x00\x12\x16\n\x12\x45XPRESSION_NEUTRAL\x10\x01\x12\x18\n\x14\x45XPRESSION_HAPPINESS\x10\x02\x12\x17\n\x13\x45XPRESSION_SURPRISE\x10\x03\x12\x14\n\x10\x45XPRESSION_ANGER\x10\x04\x12\x16\n\x12\x45XPRESSION_SADNESS\x10\x05\x12\x14\n\x10\x45XPRESSION_COUNT\x10\x05\x1a\x02\x10\x01*\xcc\x01\n\x14\x46\x61\x63\x65\x45nrollmentResult\x12\x0b\n\x07SUCCESS\x10\x00\x12\x12\n\x0eSAW_WRONG_FACE\x10\x01\x12\x16\n\x12SAW_MULTIPLE_FACES\x10\x02\x12\r\n\tTIMED_OUT\x10\x03\x12\x0f\n\x0bSAVE_FAILED\x10\x04\x12\x0e\n\nINCOMPLETE\x10\x05\x12\r\n\tCANCELLED\x10\x06\x12\x0f\n\x0bNAME_IN_USE\x10\x07\x12\x16\n\x12NAMED_STORAGE_FULL\x10\x08\x12\x13\n\x0fUNKNOWN_FAILURE\x10\t*l\n\x0f\x42\x65haviorResults\x12\x1a\n\x16\x42\x45HAVIOR_INVALID_STATE\x10\x00\x12\x1b\n\x17\x42\x45HAVIOR_COMPLETE_STATE\x10\x01\x12 \n\x1c\x42\x45HAVIOR_WONT_ACTIVATE_STATE\x10\x02*S\n\x12\x41\x63tionTagConstants\x12\x13\n\x0fINVALID_SDK_TAG\x10\x00\x12\x13\n\rFIRST_SDK_TAG\x10\x81\x89z\x12\x13\n\x0cLAST_SDK_TAG\x10\xc0\x8d\xb7\x01*\x9e\x01\n\rAlignmentType\x12\x1a\n\x16\x41LIGNMENT_TYPE_UNKNOWN\x10\x00\x12\x1e\n\x1a\x41LIGNMENT_TYPE_LIFT_FINGER\x10\x01\x12\x1d\n\x19\x41LIGNMENT_TYPE_LIFT_PLATE\x10\x02\x12\x17\n\x13\x41LIGNMENT_TYPE_BODY\x10\x03\x12\x19\n\x15\x41LIGNMENT_TYPE_CUSTOM\x10\x04*s\n\x0c\x42\x61tteryLevel\x12\x19\n\x15\x42\x41TTERY_LEVEL_UNKNOWN\x10\x00\x12\x15\n\x11\x42\x41TTERY_LEVEL_LOW\x10\x01\x12\x19\n\x15\x42\x41TTERY_LEVEL_NOMINAL\x10\x02\x12\x16\n\x12\x42\x41TTERY_LEVEL_FULL\x10\x03*\xcc\x01\n\x0e\x41udioConstants\x12\x18\n\x14\x41UDIO_CONSTANTS_NULL\x10\x00\x12\x1c\n\x18MIC_DETECTION_DIRECTIONS\x10\x0c\x12%\n SAMPLE_COUNTS_PER_ENGINE_MESSAGE\x10\xa0\x01\x12\"\n\x1dSAMPLE_COUNTS_PER_SDK_MESSAGE\x10\xc0\x0c\x12\x1b\n\x16MICROPHONE_SAMPLE_RATE\x10\x89z\x12\x1a\n\x15PROCESSED_SAMPLE_RATE\x10\x80}*\x85\x01\n\x13\x41udioProcessingMode\x12\x11\n\rAUDIO_UNKNOWN\x10\x00\x12\r\n\tAUDIO_OFF\x10\x01\x12\x13\n\x0f\x41UDIO_FAST_MODE\x10\x02\x12\x1a\n\x16\x41UDIO_DIRECTIONAL_MODE\x10\x03\x12\x1b\n\x17\x41UDIO_VOICE_DETECT_MODE\x10\x04\x62\x06proto3')
  ,
  dependencies=[anki__vector_dot_messaging_dot_response__status__pb2.DESCRIPTOR,anki__vector_dot_messaging_dot_extensions__pb2.DESCRIPTOR,])

_ROBOTSTATUS = _descriptor.EnumDescriptor(
  name='RobotStatus',
  full_name='Anki.Vector.external_interface.RobotStatus',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ROBOT_STATUS_NONE', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ROBOT_STATUS_IS_MOVING', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ROBOT_STATUS_IS_CARRYING_BLOCK', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ROBOT_STATUS_IS_PICKING_OR_PLACING', index=3, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ROBOT_STATUS_IS_PICKED_UP', index=4, number=8,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ROBOT_STATUS_IS_BUTTON_PRESSED', index=5, number=16,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ROBOT_STATUS_IS_FALLING', index=6, number=32,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ROBOT_STATUS_IS_ANIMATING', index=7, number=64,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ROBOT_STATUS_IS_PATHING', index=8, number=128,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ROBOT_STATUS_LIFT_IN_POS', index=9, number=256,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ROBOT_STATUS_HEAD_IN_POS', index=10, number=512,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ROBOT_STATUS_CALM_POWER_MODE', index=11, number=1024,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ROBOT_STATUS_IS_ON_CHARGER', index=12, number=4096,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ROBOT_STATUS_IS_CHARGING', index=13, number=8192,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ROBOT_STATUS_CLIFF_DETECTED', index=14, number=16384,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ROBOT_STATUS_ARE_WHEELS_MOVING', index=15, number=32768,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ROBOT_STATUS_IS_BEING_HELD', index=16, number=65536,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ROBOT_STATUS_IS_MOTION_DETECTED', index=17, number=131072,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=15081,
  serialized_end=15685,
)
_sym_db.RegisterEnumDescriptor(_ROBOTSTATUS)

RobotStatus = enum_type_wrapper.EnumTypeWrapper(_ROBOTSTATUS)
_FACIALEXPRESSION = _descriptor.EnumDescriptor(
  name='FacialExpression',
  full_name='Anki.Vector.external_interface.FacialExpression',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='EXPRESSION_UNKNOWN', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='EXPRESSION_NEUTRAL', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='EXPRESSION_HAPPINESS', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='EXPRESSION_SURPRISE', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='EXPRESSION_ANGER', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='EXPRESSION_SADNESS', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='EXPRESSION_COUNT', index=6, number=5,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=_descriptor._ParseOptions(descriptor_pb2.EnumOptions(), _b('\020\001')),
  serialized_start=15688,
  serialized_end=15877,
)
_sym_db.RegisterEnumDescriptor(_FACIALEXPRESSION)

FacialExpression = enum_type_wrapper.EnumTypeWrapper(_FACIALEXPRESSION)
_FACEENROLLMENTRESULT = _descriptor.EnumDescriptor(
  name='FaceEnrollmentResult',
  full_name='Anki.Vector.external_interface.FaceEnrollmentResult',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='SUCCESS', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SAW_WRONG_FACE', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SAW_MULTIPLE_FACES', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TIMED_OUT', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SAVE_FAILED', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INCOMPLETE', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CANCELLED', index=6, number=6,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NAME_IN_USE', index=7, number=7,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NAMED_STORAGE_FULL', index=8, number=8,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UNKNOWN_FAILURE', index=9, number=9,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=15880,
  serialized_end=16084,
)
_sym_db.RegisterEnumDescriptor(_FACEENROLLMENTRESULT)

FaceEnrollmentResult = enum_type_wrapper.EnumTypeWrapper(_FACEENROLLMENTRESULT)
_BEHAVIORRESULTS = _descriptor.EnumDescriptor(
  name='BehaviorResults',
  full_name='Anki.Vector.external_interface.BehaviorResults',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='BEHAVIOR_INVALID_STATE', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BEHAVIOR_COMPLETE_STATE', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BEHAVIOR_WONT_ACTIVATE_STATE', index=2, number=2,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=16086,
  serialized_end=16194,
)
_sym_db.RegisterEnumDescriptor(_BEHAVIORRESULTS)

BehaviorResults = enum_type_wrapper.EnumTypeWrapper(_BEHAVIORRESULTS)
_ACTIONTAGCONSTANTS = _descriptor.EnumDescriptor(
  name='ActionTagConstants',
  full_name='Anki.Vector.external_interface.ActionTagConstants',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='INVALID_SDK_TAG', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FIRST_SDK_TAG', index=1, number=2000001,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LAST_SDK_TAG', index=2, number=3000000,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=16196,
  serialized_end=16279,
)
_sym_db.RegisterEnumDescriptor(_ACTIONTAGCONSTANTS)

ActionTagConstants = enum_type_wrapper.EnumTypeWrapper(_ACTIONTAGCONSTANTS)
_ALIGNMENTTYPE = _descriptor.EnumDescriptor(
  name='AlignmentType',
  full_name='Anki.Vector.external_interface.AlignmentType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ALIGNMENT_TYPE_UNKNOWN', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ALIGNMENT_TYPE_LIFT_FINGER', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ALIGNMENT_TYPE_LIFT_PLATE', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ALIGNMENT_TYPE_BODY', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ALIGNMENT_TYPE_CUSTOM', index=4, number=4,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=16282,
  serialized_end=16440,
)
_sym_db.RegisterEnumDescriptor(_ALIGNMENTTYPE)

AlignmentType = enum_type_wrapper.EnumTypeWrapper(_ALIGNMENTTYPE)
_BATTERYLEVEL = _descriptor.EnumDescriptor(
  name='BatteryLevel',
  full_name='Anki.Vector.external_interface.BatteryLevel',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='BATTERY_LEVEL_UNKNOWN', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BATTERY_LEVEL_LOW', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BATTERY_LEVEL_NOMINAL', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BATTERY_LEVEL_FULL', index=3, number=3,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=16442,
  serialized_end=16557,
)
_sym_db.RegisterEnumDescriptor(_BATTERYLEVEL)

BatteryLevel = enum_type_wrapper.EnumTypeWrapper(_BATTERYLEVEL)
_AUDIOCONSTANTS = _descriptor.EnumDescriptor(
  name='AudioConstants',
  full_name='Anki.Vector.external_interface.AudioConstants',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='AUDIO_CONSTANTS_NULL', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MIC_DETECTION_DIRECTIONS', index=1, number=12,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SAMPLE_COUNTS_PER_ENGINE_MESSAGE', index=2, number=160,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SAMPLE_COUNTS_PER_SDK_MESSAGE', index=3, number=1600,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MICROPHONE_SAMPLE_RATE', index=4, number=15625,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PROCESSED_SAMPLE_RATE', index=5, number=16000,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=16560,
  serialized_end=16764,
)
_sym_db.RegisterEnumDescriptor(_AUDIOCONSTANTS)

AudioConstants = enum_type_wrapper.EnumTypeWrapper(_AUDIOCONSTANTS)
_AUDIOPROCESSINGMODE = _descriptor.EnumDescriptor(
  name='AudioProcessingMode',
  full_name='Anki.Vector.external_interface.AudioProcessingMode',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='AUDIO_UNKNOWN', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AUDIO_OFF', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AUDIO_FAST_MODE', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AUDIO_DIRECTIONAL_MODE', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='AUDIO_VOICE_DETECT_MODE', index=4, number=4,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=16767,
  serialized_end=16900,
)
_sym_db.RegisterEnumDescriptor(_AUDIOPROCESSINGMODE)

AudioProcessingMode = enum_type_wrapper.EnumTypeWrapper(_AUDIOPROCESSINGMODE)
ROBOT_STATUS_NONE = 0
ROBOT_STATUS_IS_MOVING = 1
ROBOT_STATUS_IS_CARRYING_BLOCK = 2
ROBOT_STATUS_IS_PICKING_OR_PLACING = 4
ROBOT_STATUS_IS_PICKED_UP = 8
ROBOT_STATUS_IS_BUTTON_PRESSED = 16
ROBOT_STATUS_IS_FALLING = 32
ROBOT_STATUS_IS_ANIMATING = 64
ROBOT_STATUS_IS_PATHING = 128
ROBOT_STATUS_LIFT_IN_POS = 256
ROBOT_STATUS_HEAD_IN_POS = 512
ROBOT_STATUS_CALM_POWER_MODE = 1024
ROBOT_STATUS_IS_ON_CHARGER = 4096
ROBOT_STATUS_IS_CHARGING = 8192
ROBOT_STATUS_CLIFF_DETECTED = 16384
ROBOT_STATUS_ARE_WHEELS_MOVING = 32768
ROBOT_STATUS_IS_BEING_HELD = 65536
ROBOT_STATUS_IS_MOTION_DETECTED = 131072
EXPRESSION_UNKNOWN = 0
EXPRESSION_NEUTRAL = 1
EXPRESSION_HAPPINESS = 2
EXPRESSION_SURPRISE = 3
EXPRESSION_ANGER = 4
EXPRESSION_SADNESS = 5
EXPRESSION_COUNT = 5
SUCCESS = 0
SAW_WRONG_FACE = 1
SAW_MULTIPLE_FACES = 2
TIMED_OUT = 3
SAVE_FAILED = 4
INCOMPLETE = 5
CANCELLED = 6
NAME_IN_USE = 7
NAMED_STORAGE_FULL = 8
UNKNOWN_FAILURE = 9
BEHAVIOR_INVALID_STATE = 0
BEHAVIOR_COMPLETE_STATE = 1
BEHAVIOR_WONT_ACTIVATE_STATE = 2
INVALID_SDK_TAG = 0
FIRST_SDK_TAG = 2000001
LAST_SDK_TAG = 3000000
ALIGNMENT_TYPE_UNKNOWN = 0
ALIGNMENT_TYPE_LIFT_FINGER = 1
ALIGNMENT_TYPE_LIFT_PLATE = 2
ALIGNMENT_TYPE_BODY = 3
ALIGNMENT_TYPE_CUSTOM = 4
BATTERY_LEVEL_UNKNOWN = 0
BATTERY_LEVEL_LOW = 1
BATTERY_LEVEL_NOMINAL = 2
BATTERY_LEVEL_FULL = 3
AUDIO_CONSTANTS_NULL = 0
MIC_DETECTION_DIRECTIONS = 12
SAMPLE_COUNTS_PER_ENGINE_MESSAGE = 160
SAMPLE_COUNTS_PER_SDK_MESSAGE = 1600
MICROPHONE_SAMPLE_RATE = 15625
PROCESSED_SAMPLE_RATE = 16000
AUDIO_UNKNOWN = 0
AUDIO_OFF = 1
AUDIO_FAST_MODE = 2
AUDIO_DIRECTIONAL_MODE = 3
AUDIO_VOICE_DETECT_MODE = 4


_ACTIONRESULT_ACTIONRESULTCODE = _descriptor.EnumDescriptor(
  name='ActionResultCode',
  full_name='Anki.Vector.external_interface.ActionResult.ActionResultCode',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ACTION_RESULT_SUCCESS', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACTION_RESULT_RUNNING', index=1, number=16777216,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ACTION_RESULT_CANCELLED_WHILE_RUNNING', index=2, number=33554432,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NOT_STARTED', index=3, number=33554433,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ABORT', index=4, number=50331648,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ANIM_ABORTED', index=5, number=50331649,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BAD_MARKER', index=6, number=50331650,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BAD_MESSAGE_TAG', index=7, number=50331651,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BAD_OBJECT', index=8, number=50331652,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BAD_POSE', index=9, number=50331653,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BAD_TAG', index=10, number=50331654,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CHARGER_UNPLUGGED_ABORT', index=11, number=50331655,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CLIFF_ALIGN_FAILED_TIMEOUT', index=12, number=50331656,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CLIFF_ALIGN_FAILED_NO_TURNING', index=13, number=50331657,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CLIFF_ALIGN_FAILED_OVER_TURNING', index=14, number=50331658,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CLIFF_ALIGN_FAILED_NO_WHITE', index=15, number=50331659,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CLIFF_ALIGN_FAILED_STOPPED', index=16, number=50331660,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FAILED_SETTING_CALIBRATION', index=17, number=50331661,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FOLLOWING_PATH_BUT_NOT_TRAVERSING', index=18, number=50331662,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INTERRUPTED', index=19, number=50331663,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INVALID_OFF_TREADS_STATE', index=20, number=50331664,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MISMATCHED_UP_AXIS', index=21, number=50331665,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NO_ANIM_NAME', index=22, number=50331666,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NO_DISTANCE_SET', index=23, number=50331667,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NO_FACE', index=24, number=50331668,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NO_GOAL_SET', index=25, number=50331669,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NO_PREACTION_POSES', index=26, number=50331670,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NOT_CARRYING_OBJECT_ABORT', index=27, number=50331671,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NOT_ON_CHARGER_ABORT', index=28, number=50331672,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NULL_SUBACTION', index=29, number=50331673,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PATH_PLANNING_FAILED_ABORT', index=30, number=50331674,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PICKUP_OBJECT_UNEXPECTEDLY_MOVING', index=31, number=50331675,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SEND_MESSAGE_TO_ROBOT_FAILED', index=32, number=50331676,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='STILL_CARRYING_OBJECT', index=33, number=50331677,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TIMEOUT', index=34, number=50331678,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='TRACKS_LOCKED', index=35, number=50331679,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UNEXPECTED_DOCK_ACTION', index=36, number=50331680,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UNKNOWN_TOOL_CODE', index=37, number=50331681,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UPDATE_DERIVED_FAILED', index=38, number=50331682,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='VISUAL_OBSERVATION_FAILED', index=39, number=50331683,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='SHOULDNT_DRIVE_ON_CHARGER', index=40, number=50331684,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RETRY', index=41, number=67108864,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DID_NOT_REACH_PREACTION_POSE', index=42, number=67108865,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FAILED_TRAVERSING_PATH', index=43, number=67108866,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LAST_PICK_AND_PLACE_FAILED', index=44, number=67108867,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='MOTOR_STOPPED_MAKING_PROGRESS', index=45, number=67108868,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NOT_CARRYING_OBJECT_RETRY', index=46, number=67108869,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='NOT_ON_CHARGER_RETRY', index=47, number=67108870,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PATH_PLANNING_FAILED_RETRY', index=48, number=67108871,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PLACEMENT_GOAL_NOT_FREE', index=49, number=67108872,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PICKUP_OBJECT_UNEXPECTEDLY_NOT_MOVING', index=50, number=67108873,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='STILL_ON_CHARGER', index=51, number=67108874,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UNEXPECTED_PITCH_ANGLE', index=52, number=67108875,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=6957,
  serialized_end=8519,
)
_sym_db.RegisterEnumDescriptor(_ACTIONRESULT_ACTIONRESULTCODE)

_CUBEBATTERY_CUBEBATTERYLEVEL = _descriptor.EnumDescriptor(
  name='CubeBatteryLevel',
  full_name='Anki.Vector.external_interface.CubeBattery.CubeBatteryLevel',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='Low', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Normal', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=11529,
  serialized_end=11568,
)
_sym_db.RegisterEnumDescriptor(_CUBEBATTERY_CUBEBATTERYLEVEL)

_SAYTEXTRESPONSE_UTTERANCESTATE = _descriptor.EnumDescriptor(
  name='UtteranceState',
  full_name='Anki.Vector.external_interface.SayTextResponse.UtteranceState',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='INVALID', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='GENERATING', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='READY', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PLAYING', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FINISHED', index=4, number=4,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=12154,
  serialized_end=12237,
)
_sym_db.RegisterEnumDescriptor(_SAYTEXTRESPONSE_UTTERANCESTATE)

_IMAGECHUNK_IMAGEENCODING = _descriptor.EnumDescriptor(
  name='ImageEncoding',
  full_name='Anki.Vector.external_interface.ImageChunk.ImageEncoding',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='NONE_IMAGE_ENCODING', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RAW_GRAY', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='RAW_RGB', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='YUYV', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='YUV420SP', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BAYER', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='JPEG_GRAY', index=6, number=6,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='JPEG_COLOR', index=7, number=7,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='JPEG_COLOR_HALF_WIDTH', index=8, number=8,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='JPEG_MINIMIZED_GRAY', index=9, number=9,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='JPEG_MINIMIZED_COLOR', index=10, number=10,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=14289,
  serialized_end=14500,
)
_sym_db.RegisterEnumDescriptor(_IMAGECHUNK_IMAGEENCODING)


_KEEPALIVEPING = _descriptor.Descriptor(
  name='KeepAlivePing',
  full_name='Anki.Vector.external_interface.KeepAlivePing',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=157,
  serialized_end=172,
)


_ANIMATION = _descriptor.Descriptor(
  name='Animation',
  full_name='Anki.Vector.external_interface.Animation',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='Anki.Vector.external_interface.Animation.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=174,
  serialized_end=199,
)


_DRIVEWHEELSREQUEST = _descriptor.Descriptor(
  name='DriveWheelsRequest',
  full_name='Anki.Vector.external_interface.DriveWheelsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='left_wheel_mmps', full_name='Anki.Vector.external_interface.DriveWheelsRequest.left_wheel_mmps', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='right_wheel_mmps', full_name='Anki.Vector.external_interface.DriveWheelsRequest.right_wheel_mmps', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='left_wheel_mmps2', full_name='Anki.Vector.external_interface.DriveWheelsRequest.left_wheel_mmps2', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='right_wheel_mmps2', full_name='Anki.Vector.external_interface.DriveWheelsRequest.right_wheel_mmps2', index=3,
      number=4, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=201,
  serialized_end=325,
)


_DRIVEWHEELSRESPONSE = _descriptor.Descriptor(
  name='DriveWheelsResponse',
  full_name='Anki.Vector.external_interface.DriveWheelsResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='Anki.Vector.external_interface.DriveWheelsResponse.status', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=327,
  serialized_end=412,
)


_MOVEHEADREQUEST = _descriptor.Descriptor(
  name='MoveHeadRequest',
  full_name='Anki.Vector.external_interface.MoveHeadRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='speed_rad_per_sec', full_name='Anki.Vector.external_interface.MoveHeadRequest.speed_rad_per_sec', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=414,
  serialized_end=458,
)


_MOVEHEADRESPONSE = _descriptor.Descriptor(
  name='MoveHeadResponse',
  full_name='Anki.Vector.external_interface.MoveHeadResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='Anki.Vector.external_interface.MoveHeadResponse.status', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=460,
  serialized_end=542,
)


_MOVELIFTREQUEST = _descriptor.Descriptor(
  name='MoveLiftRequest',
  full_name='Anki.Vector.external_interface.MoveLiftRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='speed_rad_per_sec', full_name='Anki.Vector.external_interface.MoveLiftRequest.speed_rad_per_sec', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=544,
  serialized_end=588,
)


_MOVELIFTRESPONSE = _descriptor.Descriptor(
  name='MoveLiftResponse',
  full_name='Anki.Vector.external_interface.MoveLiftResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='Anki.Vector.external_interface.MoveLiftResponse.status', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=590,
  serialized_end=672,
)


_PLAYANIMATIONREQUEST = _descriptor.Descriptor(
  name='PlayAnimationRequest',
  full_name='Anki.Vector.external_interface.PlayAnimationRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='animation', full_name='Anki.Vector.external_interface.PlayAnimationRequest.animation', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='loops', full_name='Anki.Vector.external_interface.PlayAnimationRequest.loops', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='ignore_body_track', full_name='Anki.Vector.external_interface.PlayAnimationRequest.ignore_body_track', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='ignore_head_track', full_name='Anki.Vector.external_interface.PlayAnimationRequest.ignore_head_track', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='ignore_lift_track', full_name='Anki.Vector.external_interface.PlayAnimationRequest.ignore_lift_track', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=675,
  serialized_end=855,
)


_PLAYANIMATIONRESPONSE = _descriptor.Descriptor(
  name='PlayAnimationResponse',
  full_name='Anki.Vector.external_interface.PlayAnimationResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='Anki.Vector.external_interface.PlayAnimationResponse.status', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='result', full_name='Anki.Vector.external_interface.PlayAnimationResponse.result', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=858,
  serialized_end=1010,
)


_LISTANIMATIONSREQUEST = _descriptor.Descriptor(
  name='ListAnimationsRequest',
  full_name='Anki.Vector.external_interface.ListAnimationsRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1012,
  serialized_end=1035,
)


_LISTANIMATIONSRESPONSE = _descriptor.Descriptor(
  name='ListAnimationsResponse',
  full_name='Anki.Vector.external_interface.ListAnimationsResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='Anki.Vector.external_interface.ListAnimationsResponse.status', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='animation_names', full_name='Anki.Vector.external_interface.ListAnimationsResponse.animation_names', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1038,
  serialized_end=1194,
)


_DISPLAYFACEIMAGERGBREQUEST = _descriptor.Descriptor(
  name='DisplayFaceImageRGBRequest',
  full_name='Anki.Vector.external_interface.DisplayFaceImageRGBRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='face_data', full_name='Anki.Vector.external_interface.DisplayFaceImageRGBRequest.face_data', index=0,
      number=1, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='duration_ms', full_name='Anki.Vector.external_interface.DisplayFaceImageRGBRequest.duration_ms', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='interrupt_running', full_name='Anki.Vector.external_interface.DisplayFaceImageRGBRequest.interrupt_running', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1196,
  serialized_end=1291,
)


_DISPLAYFACEIMAGERGBRESPONSE = _descriptor.Descriptor(
  name='DisplayFaceImageRGBResponse',
  full_name='Anki.Vector.external_interface.DisplayFaceImageRGBResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='Anki.Vector.external_interface.DisplayFaceImageRGBResponse.status', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1293,
  serialized_end=1386,
)


_MEETVICTORFACESCANSTARTED = _descriptor.Descriptor(
  name='MeetVictorFaceScanStarted',
  full_name='Anki.Vector.external_interface.MeetVictorFaceScanStarted',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1388,
  serialized_end=1415,
)


_MEETVICTORFACESCANCOMPLETE = _descriptor.Descriptor(
  name='MeetVictorFaceScanComplete',
  full_name='Anki.Vector.external_interface.MeetVictorFaceScanComplete',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1417,
  serialized_end=1445,
)


_STATUS = _descriptor.Descriptor(
  name='Status',
  full_name='Anki.Vector.external_interface.Status',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='meet_victor_face_scan_started', full_name='Anki.Vector.external_interface.Status.meet_victor_face_scan_started', index=0,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='meet_victor_face_scan_complete', full_name='Anki.Vector.external_interface.Status.meet_victor_face_scan_complete', index=1,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='face_enrollment_completed', full_name='Anki.Vector.external_interface.Status.face_enrollment_completed', index=2,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='status_type', full_name='Anki.Vector.external_interface.Status.status_type',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=1448,
  serialized_end=1767,
)


_WAKEWORD = _descriptor.Descriptor(
  name='WakeWord',
  full_name='Anki.Vector.external_interface.WakeWord',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='wake_word_begin', full_name='Anki.Vector.external_interface.WakeWord.wake_word_begin', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='wake_word_end', full_name='Anki.Vector.external_interface.WakeWord.wake_word_end', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='wake_word_type', full_name='Anki.Vector.external_interface.WakeWord.wake_word_type',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=1770,
  serialized_end=1942,
)


_TIMESTAMPEDSTATUS = _descriptor.Descriptor(
  name='TimeStampedStatus',
  full_name='Anki.Vector.external_interface.TimeStampedStatus',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='Anki.Vector.external_interface.TimeStampedStatus.status', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='timestamp_utc', full_name='Anki.Vector.external_interface.TimeStampedStatus.timestamp_utc', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1944,
  serialized_end=2042,
)


_POSESTRUCT = _descriptor.Descriptor(
  name='PoseStruct',
  full_name='Anki.Vector.external_interface.PoseStruct',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='x', full_name='Anki.Vector.external_interface.PoseStruct.x', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='y', full_name='Anki.Vector.external_interface.PoseStruct.y', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='z', full_name='Anki.Vector.external_interface.PoseStruct.z', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='q0', full_name='Anki.Vector.external_interface.PoseStruct.q0', index=3,
      number=4, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='q1', full_name='Anki.Vector.external_interface.PoseStruct.q1', index=4,
      number=5, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='q2', full_name='Anki.Vector.external_interface.PoseStruct.q2', index=5,
      number=6, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='q3', full_name='Anki.Vector.external_interface.PoseStruct.q3', index=6,
      number=7, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='origin_id', full_name='Anki.Vector.external_interface.PoseStruct.origin_id', index=7,
      number=8, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2044,
  serialized_end=2156,
)


_ACCELDATA = _descriptor.Descriptor(
  name='AccelData',
  full_name='Anki.Vector.external_interface.AccelData',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='x', full_name='Anki.Vector.external_interface.AccelData.x', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='y', full_name='Anki.Vector.external_interface.AccelData.y', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='z', full_name='Anki.Vector.external_interface.AccelData.z', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2158,
  serialized_end=2202,
)


_GYRODATA = _descriptor.Descriptor(
  name='GyroData',
  full_name='Anki.Vector.external_interface.GyroData',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='x', full_name='Anki.Vector.external_interface.GyroData.x', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='y', full_name='Anki.Vector.external_interface.GyroData.y', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='z', full_name='Anki.Vector.external_interface.GyroData.z', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2204,
  serialized_end=2247,
)


_PROXDATA = _descriptor.Descriptor(
  name='ProxData',
  full_name='Anki.Vector.external_interface.ProxData',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='distance_mm', full_name='Anki.Vector.external_interface.ProxData.distance_mm', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='signal_quality', full_name='Anki.Vector.external_interface.ProxData.signal_quality', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='is_in_valid_range', full_name='Anki.Vector.external_interface.ProxData.is_in_valid_range', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='is_valid_signal_quality', full_name='Anki.Vector.external_interface.ProxData.is_valid_signal_quality', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='is_lift_in_fov', full_name='Anki.Vector.external_interface.ProxData.is_lift_in_fov', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='is_too_pitched', full_name='Anki.Vector.external_interface.ProxData.is_too_pitched', index=5,
      number=6, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2250,
  serialized_end=2413,
)


_TOUCHDATA = _descriptor.Descriptor(
  name='TouchData',
  full_name='Anki.Vector.external_interface.TouchData',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='raw_touch_value', full_name='Anki.Vector.external_interface.TouchData.raw_touch_value', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='is_being_touched', full_name='Anki.Vector.external_interface.TouchData.is_being_touched', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2415,
  serialized_end=2477,
)


_ROBOTSTATE = _descriptor.Descriptor(
  name='RobotState',
  full_name='Anki.Vector.external_interface.RobotState',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='pose', full_name='Anki.Vector.external_interface.RobotState.pose', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='pose_angle_rad', full_name='Anki.Vector.external_interface.RobotState.pose_angle_rad', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='pose_pitch_rad', full_name='Anki.Vector.external_interface.RobotState.pose_pitch_rad', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='left_wheel_speed_mmps', full_name='Anki.Vector.external_interface.RobotState.left_wheel_speed_mmps', index=3,
      number=4, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='right_wheel_speed_mmps', full_name='Anki.Vector.external_interface.RobotState.right_wheel_speed_mmps', index=4,
      number=5, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='head_angle_rad', full_name='Anki.Vector.external_interface.RobotState.head_angle_rad', index=5,
      number=6, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='lift_height_mm', full_name='Anki.Vector.external_interface.RobotState.lift_height_mm', index=6,
      number=7, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='accel', full_name='Anki.Vector.external_interface.RobotState.accel', index=7,
      number=8, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='gyro', full_name='Anki.Vector.external_interface.RobotState.gyro', index=8,
      number=9, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='carrying_object_id', full_name='Anki.Vector.external_interface.RobotState.carrying_object_id', index=9,
      number=10, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='carrying_object_on_top_id', full_name='Anki.Vector.external_interface.RobotState.carrying_object_on_top_id', index=10,
      number=11, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='head_tracking_object_id', full_name='Anki.Vector.external_interface.RobotState.head_tracking_object_id', index=11,
      number=12, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='localized_to_object_id', full_name='Anki.Vector.external_interface.RobotState.localized_to_object_id', index=12,
      number=13, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='last_image_time_stamp', full_name='Anki.Vector.external_interface.RobotState.last_image_time_stamp', index=13,
      number=14, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='status', full_name='Anki.Vector.external_interface.RobotState.status', index=14,
      number=15, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='prox_data', full_name='Anki.Vector.external_interface.RobotState.prox_data', index=15,
      number=16, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='touch_data', full_name='Anki.Vector.external_interface.RobotState.touch_data', index=16,
      number=17, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2480,
  serialized_end=3122,
)


_CLADPOINT = _descriptor.Descriptor(
  name='CladPoint',
  full_name='Anki.Vector.external_interface.CladPoint',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='x', full_name='Anki.Vector.external_interface.CladPoint.x', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='y', full_name='Anki.Vector.external_interface.CladPoint.y', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3124,
  serialized_end=3157,
)


_CLADRECT = _descriptor.Descriptor(
  name='CladRect',
  full_name='Anki.Vector.external_interface.CladRect',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='x_top_left', full_name='Anki.Vector.external_interface.CladRect.x_top_left', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='y_top_left', full_name='Anki.Vector.external_interface.CladRect.y_top_left', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='width', full_name='Anki.Vector.external_interface.CladRect.width', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='height', full_name='Anki.Vector.external_interface.CladRect.height', index=3,
      number=4, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3159,
  serialized_end=3240,
)


_ROBOTOBSERVEDFACE = _descriptor.Descriptor(
  name='RobotObservedFace',
  full_name='Anki.Vector.external_interface.RobotObservedFace',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='face_id', full_name='Anki.Vector.external_interface.RobotObservedFace.face_id', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='timestamp', full_name='Anki.Vector.external_interface.RobotObservedFace.timestamp', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='pose', full_name='Anki.Vector.external_interface.RobotObservedFace.pose', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='img_rect', full_name='Anki.Vector.external_interface.RobotObservedFace.img_rect', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='name', full_name='Anki.Vector.external_interface.RobotObservedFace.name', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='expression', full_name='Anki.Vector.external_interface.RobotObservedFace.expression', index=5,
      number=6, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='expression_values', full_name='Anki.Vector.external_interface.RobotObservedFace.expression_values', index=6,
      number=7, type=13, cpp_type=3, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='left_eye', full_name='Anki.Vector.external_interface.RobotObservedFace.left_eye', index=7,
      number=8, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='right_eye', full_name='Anki.Vector.external_interface.RobotObservedFace.right_eye', index=8,
      number=9, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='nose', full_name='Anki.Vector.external_interface.RobotObservedFace.nose', index=9,
      number=10, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='mouth', full_name='Anki.Vector.external_interface.RobotObservedFace.mouth', index=10,
      number=11, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3243,
  serialized_end=3765,
)


_ROBOTCHANGEDOBSERVEDFACEID = _descriptor.Descriptor(
  name='RobotChangedObservedFaceID',
  full_name='Anki.Vector.external_interface.RobotChangedObservedFaceID',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='old_id', full_name='Anki.Vector.external_interface.RobotChangedObservedFaceID.old_id', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='new_id', full_name='Anki.Vector.external_interface.RobotChangedObservedFaceID.new_id', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3767,
  serialized_end=3827,
)


_FACEENROLLMENTCOMPLETED = _descriptor.Descriptor(
  name='FaceEnrollmentCompleted',
  full_name='Anki.Vector.external_interface.FaceEnrollmentCompleted',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='result', full_name='Anki.Vector.external_interface.FaceEnrollmentCompleted.result', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='face_id', full_name='Anki.Vector.external_interface.FaceEnrollmentCompleted.face_id', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='name', full_name='Anki.Vector.external_interface.FaceEnrollmentCompleted.name', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3829,
  serialized_end=3955,
)


_CANCELFACEENROLLMENTREQUEST = _descriptor.Descriptor(
  name='CancelFaceEnrollmentRequest',
  full_name='Anki.Vector.external_interface.CancelFaceEnrollmentRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3957,
  serialized_end=3986,
)


_CANCELFACEENROLLMENTRESPONSE = _descriptor.Descriptor(
  name='CancelFaceEnrollmentResponse',
  full_name='Anki.Vector.external_interface.CancelFaceEnrollmentResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='Anki.Vector.external_interface.CancelFaceEnrollmentResponse.status', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3988,
  serialized_end=4082,
)


_REQUESTENROLLEDNAMESREQUEST = _descriptor.Descriptor(
  name='RequestEnrolledNamesRequest',
  full_name='Anki.Vector.external_interface.RequestEnrolledNamesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4084,
  serialized_end=4113,
)


_LOADEDKNOWNFACE = _descriptor.Descriptor(
  name='LoadedKnownFace',
  full_name='Anki.Vector.external_interface.LoadedKnownFace',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='seconds_since_first_enrolled', full_name='Anki.Vector.external_interface.LoadedKnownFace.seconds_since_first_enrolled', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='seconds_since_last_updated', full_name='Anki.Vector.external_interface.LoadedKnownFace.seconds_since_last_updated', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='seconds_since_last_seen', full_name='Anki.Vector.external_interface.LoadedKnownFace.seconds_since_last_seen', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='last_seen_seconds_since_epoch', full_name='Anki.Vector.external_interface.LoadedKnownFace.last_seen_seconds_since_epoch', index=3,
      number=4, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='face_id', full_name='Anki.Vector.external_interface.LoadedKnownFace.face_id', index=4,
      number=5, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='name', full_name='Anki.Vector.external_interface.LoadedKnownFace.name', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4116,
  serialized_end=4310,
)


_ROBOTRENAMEDENROLLEDFACE = _descriptor.Descriptor(
  name='RobotRenamedEnrolledFace',
  full_name='Anki.Vector.external_interface.RobotRenamedEnrolledFace',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='face_id', full_name='Anki.Vector.external_interface.RobotRenamedEnrolledFace.face_id', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='name', full_name='Anki.Vector.external_interface.RobotRenamedEnrolledFace.name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4312,
  serialized_end=4369,
)


_REQUESTENROLLEDNAMESRESPONSE = _descriptor.Descriptor(
  name='RequestEnrolledNamesResponse',
  full_name='Anki.Vector.external_interface.RequestEnrolledNamesResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='Anki.Vector.external_interface.RequestEnrolledNamesResponse.status', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='faces', full_name='Anki.Vector.external_interface.RequestEnrolledNamesResponse.faces', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4372,
  serialized_end=4530,
)


_UPDATEENROLLEDFACEBYIDREQUEST = _descriptor.Descriptor(
  name='UpdateEnrolledFaceByIDRequest',
  full_name='Anki.Vector.external_interface.UpdateEnrolledFaceByIDRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='face_id', full_name='Anki.Vector.external_interface.UpdateEnrolledFaceByIDRequest.face_id', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='old_name', full_name='Anki.Vector.external_interface.UpdateEnrolledFaceByIDRequest.old_name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='new_name', full_name='Anki.Vector.external_interface.UpdateEnrolledFaceByIDRequest.new_name', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4532,
  serialized_end=4616,
)


_UPDATEENROLLEDFACEBYIDRESPONSE = _descriptor.Descriptor(
  name='UpdateEnrolledFaceByIDResponse',
  full_name='Anki.Vector.external_interface.UpdateEnrolledFaceByIDResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='Anki.Vector.external_interface.UpdateEnrolledFaceByIDResponse.status', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4618,
  serialized_end=4714,
)


_ERASEENROLLEDFACEBYIDREQUEST = _descriptor.Descriptor(
  name='EraseEnrolledFaceByIDRequest',
  full_name='Anki.Vector.external_interface.EraseEnrolledFaceByIDRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='face_id', full_name='Anki.Vector.external_interface.EraseEnrolledFaceByIDRequest.face_id', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4716,
  serialized_end=4763,
)


_ERASEENROLLEDFACEBYIDRESPONSE = _descriptor.Descriptor(
  name='EraseEnrolledFaceByIDResponse',
  full_name='Anki.Vector.external_interface.EraseEnrolledFaceByIDResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='Anki.Vector.external_interface.EraseEnrolledFaceByIDResponse.status', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4765,
  serialized_end=4860,
)


_ERASEALLENROLLEDFACESREQUEST = _descriptor.Descriptor(
  name='EraseAllEnrolledFacesRequest',
  full_name='Anki.Vector.external_interface.EraseAllEnrolledFacesRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4862,
  serialized_end=4892,
)


_ERASEALLENROLLEDFACESRESPONSE = _descriptor.Descriptor(
  name='EraseAllEnrolledFacesResponse',
  full_name='Anki.Vector.external_interface.EraseAllEnrolledFacesResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='Anki.Vector.external_interface.EraseAllEnrolledFacesResponse.status', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4894,
  serialized_end=4989,
)


_SETFACETOENROLLREQUEST = _descriptor.Descriptor(
  name='SetFaceToEnrollRequest',
  full_name='Anki.Vector.external_interface.SetFaceToEnrollRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='Anki.Vector.external_interface.SetFaceToEnrollRequest.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='observed_id', full_name='Anki.Vector.external_interface.SetFaceToEnrollRequest.observed_id', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='save_id', full_name='Anki.Vector.external_interface.SetFaceToEnrollRequest.save_id', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='save_to_robot', full_name='Anki.Vector.external_interface.SetFaceToEnrollRequest.save_to_robot', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='say_name', full_name='Anki.Vector.external_interface.SetFaceToEnrollRequest.say_name', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='use_music', full_name='Anki.Vector.external_interface.SetFaceToEnrollRequest.use_music', index=5,
      number=6, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4992,
  serialized_end=5128,
)


_SETFACETOENROLLRESPONSE = _descriptor.Descriptor(
  name='SetFaceToEnrollResponse',
  full_name='Anki.Vector.external_interface.SetFaceToEnrollResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='Anki.Vector.external_interface.SetFaceToEnrollResponse.status', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5130,
  serialized_end=5219,
)


_DRIVEOFFCHARGERREQUEST = _descriptor.Descriptor(
  name='DriveOffChargerRequest',
  full_name='Anki.Vector.external_interface.DriveOffChargerRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5221,
  serialized_end=5245,
)


_DRIVEOFFCHARGERRESPONSE = _descriptor.Descriptor(
  name='DriveOffChargerResponse',
  full_name='Anki.Vector.external_interface.DriveOffChargerResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='Anki.Vector.external_interface.DriveOffChargerResponse.status', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='result', full_name='Anki.Vector.external_interface.DriveOffChargerResponse.result', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5248,
  serialized_end=5402,
)


_DRIVEONCHARGERREQUEST = _descriptor.Descriptor(
  name='DriveOnChargerRequest',
  full_name='Anki.Vector.external_interface.DriveOnChargerRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5404,
  serialized_end=5427,
)


_DRIVEONCHARGERRESPONSE = _descriptor.Descriptor(
  name='DriveOnChargerResponse',
  full_name='Anki.Vector.external_interface.DriveOnChargerResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='Anki.Vector.external_interface.DriveOnChargerResponse.status', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='result', full_name='Anki.Vector.external_interface.DriveOnChargerResponse.result', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5430,
  serialized_end=5583,
)


_WAKEWORDBEGIN = _descriptor.Descriptor(
  name='WakeWordBegin',
  full_name='Anki.Vector.external_interface.WakeWordBegin',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5585,
  serialized_end=5600,
)


_WAKEWORDEND = _descriptor.Descriptor(
  name='WakeWordEnd',
  full_name='Anki.Vector.external_interface.WakeWordEnd',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='intent_heard', full_name='Anki.Vector.external_interface.WakeWordEnd.intent_heard', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='intent_json', full_name='Anki.Vector.external_interface.WakeWordEnd.intent_json', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5602,
  serialized_end=5658,
)


_PHOTOINFO = _descriptor.Descriptor(
  name='PhotoInfo',
  full_name='Anki.Vector.external_interface.PhotoInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='photo_id', full_name='Anki.Vector.external_interface.PhotoInfo.photo_id', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='timestamp_utc', full_name='Anki.Vector.external_interface.PhotoInfo.timestamp_utc', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='photo_copied_to_app', full_name='Anki.Vector.external_interface.PhotoInfo.photo_copied_to_app', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='thumb_copied_to_app', full_name='Anki.Vector.external_interface.PhotoInfo.thumb_copied_to_app', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5660,
  serialized_end=5770,
)


_PHOTOSINFOREQUEST = _descriptor.Descriptor(
  name='PhotosInfoRequest',
  full_name='Anki.Vector.external_interface.PhotosInfoRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5772,
  serialized_end=5791,
)


_PHOTOSINFORESPONSE = _descriptor.Descriptor(
  name='PhotosInfoResponse',
  full_name='Anki.Vector.external_interface.PhotosInfoResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='Anki.Vector.external_interface.PhotosInfoResponse.status', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='photo_infos', full_name='Anki.Vector.external_interface.PhotosInfoResponse.photo_infos', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5794,
  serialized_end=5942,
)


_PHOTOREQUEST = _descriptor.Descriptor(
  name='PhotoRequest',
  full_name='Anki.Vector.external_interface.PhotoRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='photo_id', full_name='Anki.Vector.external_interface.PhotoRequest.photo_id', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5944,
  serialized_end=5976,
)


_PHOTOPATHMESSAGE = _descriptor.Descriptor(
  name='PhotoPathMessage',
  full_name='Anki.Vector.external_interface.PhotoPathMessage',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='success', full_name='Anki.Vector.external_interface.PhotoPathMessage.success', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='full_path', full_name='Anki.Vector.external_interface.PhotoPathMessage.full_path', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5978,
  serialized_end=6032,
)


_PHOTORESPONSE = _descriptor.Descriptor(
  name='PhotoResponse',
  full_name='Anki.Vector.external_interface.PhotoResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='Anki.Vector.external_interface.PhotoResponse.status', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='success', full_name='Anki.Vector.external_interface.PhotoResponse.success', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='image', full_name='Anki.Vector.external_interface.PhotoResponse.image', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6034,
  serialized_end=6145,
)


_THUMBNAILREQUEST = _descriptor.Descriptor(
  name='ThumbnailRequest',
  full_name='Anki.Vector.external_interface.ThumbnailRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='photo_id', full_name='Anki.Vector.external_interface.ThumbnailRequest.photo_id', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6147,
  serialized_end=6183,
)


_THUMBNAILPATHMESSAGE = _descriptor.Descriptor(
  name='ThumbnailPathMessage',
  full_name='Anki.Vector.external_interface.ThumbnailPathMessage',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='success', full_name='Anki.Vector.external_interface.ThumbnailPathMessage.success', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='full_path', full_name='Anki.Vector.external_interface.ThumbnailPathMessage.full_path', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6185,
  serialized_end=6243,
)


_THUMBNAILRESPONSE = _descriptor.Descriptor(
  name='ThumbnailResponse',
  full_name='Anki.Vector.external_interface.ThumbnailResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='Anki.Vector.external_interface.ThumbnailResponse.status', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='success', full_name='Anki.Vector.external_interface.ThumbnailResponse.success', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='image', full_name='Anki.Vector.external_interface.ThumbnailResponse.image', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6245,
  serialized_end=6360,
)


_DELETEPHOTOREQUEST = _descriptor.Descriptor(
  name='DeletePhotoRequest',
  full_name='Anki.Vector.external_interface.DeletePhotoRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='photo_id', full_name='Anki.Vector.external_interface.DeletePhotoRequest.photo_id', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6362,
  serialized_end=6400,
)


_DELETEPHOTORESPONSE = _descriptor.Descriptor(
  name='DeletePhotoResponse',
  full_name='Anki.Vector.external_interface.DeletePhotoResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='Anki.Vector.external_interface.DeletePhotoResponse.status', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='success', full_name='Anki.Vector.external_interface.DeletePhotoResponse.success', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6402,
  serialized_end=6504,
)


_PHOTOTAKEN = _descriptor.Descriptor(
  name='PhotoTaken',
  full_name='Anki.Vector.external_interface.PhotoTaken',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='photo_id', full_name='Anki.Vector.external_interface.PhotoTaken.photo_id', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6506,
  serialized_end=6536,
)


_PATHMOTIONPROFILE = _descriptor.Descriptor(
  name='PathMotionProfile',
  full_name='Anki.Vector.external_interface.PathMotionProfile',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='speed_mmps', full_name='Anki.Vector.external_interface.PathMotionProfile.speed_mmps', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='accel_mmps2', full_name='Anki.Vector.external_interface.PathMotionProfile.accel_mmps2', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='decel_mmps2', full_name='Anki.Vector.external_interface.PathMotionProfile.decel_mmps2', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='point_turn_speed_rad_per_sec', full_name='Anki.Vector.external_interface.PathMotionProfile.point_turn_speed_rad_per_sec', index=3,
      number=4, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='point_turn_accel_rad_per_sec2', full_name='Anki.Vector.external_interface.PathMotionProfile.point_turn_accel_rad_per_sec2', index=4,
      number=5, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='point_turn_decel_rad_per_sec2', full_name='Anki.Vector.external_interface.PathMotionProfile.point_turn_decel_rad_per_sec2', index=5,
      number=6, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='dock_speed_mmps', full_name='Anki.Vector.external_interface.PathMotionProfile.dock_speed_mmps', index=6,
      number=7, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='dock_accel_mmps2', full_name='Anki.Vector.external_interface.PathMotionProfile.dock_accel_mmps2', index=7,
      number=8, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='dock_decel_mmps2', full_name='Anki.Vector.external_interface.PathMotionProfile.dock_decel_mmps2', index=8,
      number=9, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='reverse_speed_mmps', full_name='Anki.Vector.external_interface.PathMotionProfile.reverse_speed_mmps', index=9,
      number=10, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='is_custom', full_name='Anki.Vector.external_interface.PathMotionProfile.is_custom', index=10,
      number=11, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6539,
  serialized_end=6860,
)


_ACTIONRESULT = _descriptor.Descriptor(
  name='ActionResult',
  full_name='Anki.Vector.external_interface.ActionResult',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='code', full_name='Anki.Vector.external_interface.ActionResult.code', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _ACTIONRESULT_ACTIONRESULTCODE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=6863,
  serialized_end=8519,
)


_GOTOPOSEREQUEST = _descriptor.Descriptor(
  name='GoToPoseRequest',
  full_name='Anki.Vector.external_interface.GoToPoseRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='x_mm', full_name='Anki.Vector.external_interface.GoToPoseRequest.x_mm', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='y_mm', full_name='Anki.Vector.external_interface.GoToPoseRequest.y_mm', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='rad', full_name='Anki.Vector.external_interface.GoToPoseRequest.rad', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='motion_prof', full_name='Anki.Vector.external_interface.GoToPoseRequest.motion_prof', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='id_tag', full_name='Anki.Vector.external_interface.GoToPoseRequest.id_tag', index=4,
      number=5, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='num_retries', full_name='Anki.Vector.external_interface.GoToPoseRequest.num_retries', index=5,
      number=6, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8522,
  serialized_end=8689,
)


_GOTOPOSERESPONSE = _descriptor.Descriptor(
  name='GoToPoseResponse',
  full_name='Anki.Vector.external_interface.GoToPoseResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='Anki.Vector.external_interface.GoToPoseResponse.status', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='result', full_name='Anki.Vector.external_interface.GoToPoseResponse.result', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8692,
  serialized_end=8836,
)


_DOCKWITHCUBEREQUEST = _descriptor.Descriptor(
  name='DockWithCubeRequest',
  full_name='Anki.Vector.external_interface.DockWithCubeRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='object_id', full_name='Anki.Vector.external_interface.DockWithCubeRequest.object_id', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='distance_from_marker_mm', full_name='Anki.Vector.external_interface.DockWithCubeRequest.distance_from_marker_mm', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='approach_angle_rad', full_name='Anki.Vector.external_interface.DockWithCubeRequest.approach_angle_rad', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='alignment_type', full_name='Anki.Vector.external_interface.DockWithCubeRequest.alignment_type', index=3,
      number=4, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='use_approach_angle', full_name='Anki.Vector.external_interface.DockWithCubeRequest.use_approach_angle', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='use_pre_dock_pose', full_name='Anki.Vector.external_interface.DockWithCubeRequest.use_pre_dock_pose', index=5,
      number=6, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='motion_prof', full_name='Anki.Vector.external_interface.DockWithCubeRequest.motion_prof', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='id_tag', full_name='Anki.Vector.external_interface.DockWithCubeRequest.id_tag', index=7,
      number=8, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='num_retries', full_name='Anki.Vector.external_interface.DockWithCubeRequest.num_retries', index=8,
      number=9, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=8839,
  serialized_end=9175,
)


_DOCKWITHCUBERESPONSE = _descriptor.Descriptor(
  name='DockWithCubeResponse',
  full_name='Anki.Vector.external_interface.DockWithCubeResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='Anki.Vector.external_interface.DockWithCubeResponse.status', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='result', full_name='Anki.Vector.external_interface.DockWithCubeResponse.result', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9178,
  serialized_end=9326,
)


_DRIVESTRAIGHTREQUEST = _descriptor.Descriptor(
  name='DriveStraightRequest',
  full_name='Anki.Vector.external_interface.DriveStraightRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='speed_mmps', full_name='Anki.Vector.external_interface.DriveStraightRequest.speed_mmps', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='dist_mm', full_name='Anki.Vector.external_interface.DriveStraightRequest.dist_mm', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='should_play_animation', full_name='Anki.Vector.external_interface.DriveStraightRequest.should_play_animation', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='id_tag', full_name='Anki.Vector.external_interface.DriveStraightRequest.id_tag', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='num_retries', full_name='Anki.Vector.external_interface.DriveStraightRequest.num_retries', index=4,
      number=5, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9328,
  serialized_end=9455,
)


_DRIVESTRAIGHTRESPONSE = _descriptor.Descriptor(
  name='DriveStraightResponse',
  full_name='Anki.Vector.external_interface.DriveStraightResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='Anki.Vector.external_interface.DriveStraightResponse.status', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='result', full_name='Anki.Vector.external_interface.DriveStraightResponse.result', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9458,
  serialized_end=9607,
)


_TURNINPLACEREQUEST = _descriptor.Descriptor(
  name='TurnInPlaceRequest',
  full_name='Anki.Vector.external_interface.TurnInPlaceRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='angle_rad', full_name='Anki.Vector.external_interface.TurnInPlaceRequest.angle_rad', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='speed_rad_per_sec', full_name='Anki.Vector.external_interface.TurnInPlaceRequest.speed_rad_per_sec', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='accel_rad_per_sec2', full_name='Anki.Vector.external_interface.TurnInPlaceRequest.accel_rad_per_sec2', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='tol_rad', full_name='Anki.Vector.external_interface.TurnInPlaceRequest.tol_rad', index=3,
      number=4, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='is_absolute', full_name='Anki.Vector.external_interface.TurnInPlaceRequest.is_absolute', index=4,
      number=5, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='id_tag', full_name='Anki.Vector.external_interface.TurnInPlaceRequest.id_tag', index=5,
      number=6, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='num_retries', full_name='Anki.Vector.external_interface.TurnInPlaceRequest.num_retries', index=6,
      number=7, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9610,
  serialized_end=9779,
)


_TURNINPLACERESPONSE = _descriptor.Descriptor(
  name='TurnInPlaceResponse',
  full_name='Anki.Vector.external_interface.TurnInPlaceResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='Anki.Vector.external_interface.TurnInPlaceResponse.status', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='result', full_name='Anki.Vector.external_interface.TurnInPlaceResponse.result', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9782,
  serialized_end=9929,
)


_SETHEADANGLEREQUEST = _descriptor.Descriptor(
  name='SetHeadAngleRequest',
  full_name='Anki.Vector.external_interface.SetHeadAngleRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='angle_rad', full_name='Anki.Vector.external_interface.SetHeadAngleRequest.angle_rad', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='max_speed_rad_per_sec', full_name='Anki.Vector.external_interface.SetHeadAngleRequest.max_speed_rad_per_sec', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='accel_rad_per_sec2', full_name='Anki.Vector.external_interface.SetHeadAngleRequest.accel_rad_per_sec2', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='duration_sec', full_name='Anki.Vector.external_interface.SetHeadAngleRequest.duration_sec', index=3,
      number=4, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='id_tag', full_name='Anki.Vector.external_interface.SetHeadAngleRequest.id_tag', index=4,
      number=5, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='num_retries', full_name='Anki.Vector.external_interface.SetHeadAngleRequest.num_retries', index=5,
      number=6, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=9932,
  serialized_end=10090,
)


_SETHEADANGLERESPONSE = _descriptor.Descriptor(
  name='SetHeadAngleResponse',
  full_name='Anki.Vector.external_interface.SetHeadAngleResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='Anki.Vector.external_interface.SetHeadAngleResponse.status', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='result', full_name='Anki.Vector.external_interface.SetHeadAngleResponse.result', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=10093,
  serialized_end=10241,
)


_SETLIFTHEIGHTREQUEST = _descriptor.Descriptor(
  name='SetLiftHeightRequest',
  full_name='Anki.Vector.external_interface.SetLiftHeightRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='height_mm', full_name='Anki.Vector.external_interface.SetLiftHeightRequest.height_mm', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='max_speed_rad_per_sec', full_name='Anki.Vector.external_interface.SetLiftHeightRequest.max_speed_rad_per_sec', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='accel_rad_per_sec2', full_name='Anki.Vector.external_interface.SetLiftHeightRequest.accel_rad_per_sec2', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='duration_sec', full_name='Anki.Vector.external_interface.SetLiftHeightRequest.duration_sec', index=3,
      number=4, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='id_tag', full_name='Anki.Vector.external_interface.SetLiftHeightRequest.id_tag', index=4,
      number=5, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='num_retries', full_name='Anki.Vector.external_interface.SetLiftHeightRequest.num_retries', index=5,
      number=6, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=10244,
  serialized_end=10403,
)


_SETLIFTHEIGHTRESPONSE = _descriptor.Descriptor(
  name='SetLiftHeightResponse',
  full_name='Anki.Vector.external_interface.SetLiftHeightResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='Anki.Vector.external_interface.SetLiftHeightResponse.status', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='result', full_name='Anki.Vector.external_interface.SetLiftHeightResponse.result', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=10406,
  serialized_end=10555,
)


_NETWORKSTATS = _descriptor.Descriptor(
  name='NetworkStats',
  full_name='Anki.Vector.external_interface.NetworkStats',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='g_net_stat1_num_connections', full_name='Anki.Vector.external_interface.NetworkStats.g_net_stat1_num_connections', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='g_net_stat2_latency_avg', full_name='Anki.Vector.external_interface.NetworkStats.g_net_stat2_latency_avg', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='g_net_stat3_latency_sd', full_name='Anki.Vector.external_interface.NetworkStats.g_net_stat3_latency_sd', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='g_net_stat4_latency_min', full_name='Anki.Vector.external_interface.NetworkStats.g_net_stat4_latency_min', index=3,
      number=4, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='g_net_stat5_latency_max', full_name='Anki.Vector.external_interface.NetworkStats.g_net_stat5_latency_max', index=4,
      number=5, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='g_net_stat6_ping_arrived_pc', full_name='Anki.Vector.external_interface.NetworkStats.g_net_stat6_ping_arrived_pc', index=5,
      number=6, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='g_net_stat7_ext_queued_avg_ms', full_name='Anki.Vector.external_interface.NetworkStats.g_net_stat7_ext_queued_avg_ms', index=6,
      number=7, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='g_net_stat8_ext_queued_min_ms', full_name='Anki.Vector.external_interface.NetworkStats.g_net_stat8_ext_queued_min_ms', index=7,
      number=8, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='g_net_stat9_ext_queued_max_ms', full_name='Anki.Vector.external_interface.NetworkStats.g_net_stat9_ext_queued_max_ms', index=8,
      number=9, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='g_net_stata_queued_avg_ms', full_name='Anki.Vector.external_interface.NetworkStats.g_net_stata_queued_avg_ms', index=9,
      number=10, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='g_net_statb_queued_min_ms', full_name='Anki.Vector.external_interface.NetworkStats.g_net_statb_queued_min_ms', index=10,
      number=11, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='g_net_statc_queued_max_ms', full_name='Anki.Vector.external_interface.NetworkStats.g_net_statc_queued_max_ms', index=11,
      number=12, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=10558,
  serialized_end=10999,
)


_BATTERYSTATEREQUEST = _descriptor.Descriptor(
  name='BatteryStateRequest',
  full_name='Anki.Vector.external_interface.BatteryStateRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11001,
  serialized_end=11022,
)


_BATTERYSTATERESPONSE = _descriptor.Descriptor(
  name='BatteryStateResponse',
  full_name='Anki.Vector.external_interface.BatteryStateResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='Anki.Vector.external_interface.BatteryStateResponse.status', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='battery_level', full_name='Anki.Vector.external_interface.BatteryStateResponse.battery_level', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='battery_volts', full_name='Anki.Vector.external_interface.BatteryStateResponse.battery_volts', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='is_charging', full_name='Anki.Vector.external_interface.BatteryStateResponse.is_charging', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='is_on_charger_platform', full_name='Anki.Vector.external_interface.BatteryStateResponse.is_on_charger_platform', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='suggested_charger_sec', full_name='Anki.Vector.external_interface.BatteryStateResponse.suggested_charger_sec', index=5,
      number=6, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='cube_battery', full_name='Anki.Vector.external_interface.BatteryStateResponse.cube_battery', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11025,
  serialized_end=11354,
)


_CUBEBATTERY = _descriptor.Descriptor(
  name='CubeBattery',
  full_name='Anki.Vector.external_interface.CubeBattery',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='level', full_name='Anki.Vector.external_interface.CubeBattery.level', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='factory_id', full_name='Anki.Vector.external_interface.CubeBattery.factory_id', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='battery_volts', full_name='Anki.Vector.external_interface.CubeBattery.battery_volts', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='time_since_last_reading_sec', full_name='Anki.Vector.external_interface.CubeBattery.time_since_last_reading_sec', index=3,
      number=4, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _CUBEBATTERY_CUBEBATTERYLEVEL,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11357,
  serialized_end=11568,
)


_VERSIONSTATEREQUEST = _descriptor.Descriptor(
  name='VersionStateRequest',
  full_name='Anki.Vector.external_interface.VersionStateRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11570,
  serialized_end=11591,
)


_VERSIONSTATERESPONSE = _descriptor.Descriptor(
  name='VersionStateResponse',
  full_name='Anki.Vector.external_interface.VersionStateResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='Anki.Vector.external_interface.VersionStateResponse.status', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='os_version', full_name='Anki.Vector.external_interface.VersionStateResponse.os_version', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='engine_build_id', full_name='Anki.Vector.external_interface.VersionStateResponse.engine_build_id', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11594,
  serialized_end=11725,
)


_NETWORKSTATEREQUEST = _descriptor.Descriptor(
  name='NetworkStateRequest',
  full_name='Anki.Vector.external_interface.NetworkStateRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11727,
  serialized_end=11748,
)


_NETWORKSTATERESPONSE = _descriptor.Descriptor(
  name='NetworkStateResponse',
  full_name='Anki.Vector.external_interface.NetworkStateResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='Anki.Vector.external_interface.NetworkStateResponse.status', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='network_stats', full_name='Anki.Vector.external_interface.NetworkStateResponse.network_stats', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11751,
  serialized_end=11906,
)


_SAYTEXTREQUEST = _descriptor.Descriptor(
  name='SayTextRequest',
  full_name='Anki.Vector.external_interface.SayTextRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='text', full_name='Anki.Vector.external_interface.SayTextRequest.text', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='use_vector_voice', full_name='Anki.Vector.external_interface.SayTextRequest.use_vector_voice', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='duration_scalar', full_name='Anki.Vector.external_interface.SayTextRequest.duration_scalar', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11908,
  serialized_end=11989,
)


_SAYTEXTRESPONSE = _descriptor.Descriptor(
  name='SayTextResponse',
  full_name='Anki.Vector.external_interface.SayTextResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='Anki.Vector.external_interface.SayTextResponse.status', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='state', full_name='Anki.Vector.external_interface.SayTextResponse.state', index=1,
      number=2, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _SAYTEXTRESPONSE_UTTERANCESTATE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=11992,
  serialized_end=12237,
)


_STIMULATIONINFO = _descriptor.Descriptor(
  name='StimulationInfo',
  full_name='Anki.Vector.external_interface.StimulationInfo',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='emotion_events', full_name='Anki.Vector.external_interface.StimulationInfo.emotion_events', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='Anki.Vector.external_interface.StimulationInfo.value', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='velocity', full_name='Anki.Vector.external_interface.StimulationInfo.velocity', index=2,
      number=3, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='accel', full_name='Anki.Vector.external_interface.StimulationInfo.accel', index=3,
      number=4, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value_before_event', full_name='Anki.Vector.external_interface.StimulationInfo.value_before_event', index=4,
      number=5, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='min_value', full_name='Anki.Vector.external_interface.StimulationInfo.min_value', index=5,
      number=6, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='max_value', full_name='Anki.Vector.external_interface.StimulationInfo.max_value', index=6,
      number=7, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=12240,
  serialized_end=12395,
)


_AUDIOSENDMODEREQUEST = _descriptor.Descriptor(
  name='AudioSendModeRequest',
  full_name='Anki.Vector.external_interface.AudioSendModeRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='mode', full_name='Anki.Vector.external_interface.AudioSendModeRequest.mode', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=12397,
  serialized_end=12486,
)


_AUDIOSENDMODECHANGED = _descriptor.Descriptor(
  name='AudioSendModeChanged',
  full_name='Anki.Vector.external_interface.AudioSendModeChanged',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='mode', full_name='Anki.Vector.external_interface.AudioSendModeChanged.mode', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=12488,
  serialized_end=12577,
)


_AUDIOCHUNK = _descriptor.Descriptor(
  name='AudioChunk',
  full_name='Anki.Vector.external_interface.AudioChunk',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='robot_time_stamp', full_name='Anki.Vector.external_interface.AudioChunk.robot_time_stamp', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='group_id', full_name='Anki.Vector.external_interface.AudioChunk.group_id', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='chunk_id', full_name='Anki.Vector.external_interface.AudioChunk.chunk_id', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='audio_chunk_count', full_name='Anki.Vector.external_interface.AudioChunk.audio_chunk_count', index=3,
      number=4, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='signal_power', full_name='Anki.Vector.external_interface.AudioChunk.signal_power', index=4,
      number=5, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='direction_strengths', full_name='Anki.Vector.external_interface.AudioChunk.direction_strengths', index=5,
      number=6, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='source_direction', full_name='Anki.Vector.external_interface.AudioChunk.source_direction', index=6,
      number=7, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='source_confidence', full_name='Anki.Vector.external_interface.AudioChunk.source_confidence', index=7,
      number=8, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='noise_floor_power', full_name='Anki.Vector.external_interface.AudioChunk.noise_floor_power', index=8,
      number=9, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=12580,
  serialized_end=12812,
)


_AUDIOFEEDREQUEST = _descriptor.Descriptor(
  name='AudioFeedRequest',
  full_name='Anki.Vector.external_interface.AudioFeedRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=12814,
  serialized_end=12832,
)


_AUDIOFEEDRESPONSE = _descriptor.Descriptor(
  name='AudioFeedResponse',
  full_name='Anki.Vector.external_interface.AudioFeedResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='robot_time_stamp', full_name='Anki.Vector.external_interface.AudioFeedResponse.robot_time_stamp', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='group_id', full_name='Anki.Vector.external_interface.AudioFeedResponse.group_id', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='signal_power', full_name='Anki.Vector.external_interface.AudioFeedResponse.signal_power', index=2,
      number=3, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='direction_strengths', full_name='Anki.Vector.external_interface.AudioFeedResponse.direction_strengths', index=3,
      number=4, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='source_direction', full_name='Anki.Vector.external_interface.AudioFeedResponse.source_direction', index=4,
      number=5, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='source_confidence', full_name='Anki.Vector.external_interface.AudioFeedResponse.source_confidence', index=5,
      number=6, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='noise_floor_power', full_name='Anki.Vector.external_interface.AudioFeedResponse.noise_floor_power', index=6,
      number=7, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('\200\246\035\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=12835,
  serialized_end=13035,
)


_ENABLEMARKERDETECTIONREQUEST = _descriptor.Descriptor(
  name='EnableMarkerDetectionRequest',
  full_name='Anki.Vector.external_interface.EnableMarkerDetectionRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='enable', full_name='Anki.Vector.external_interface.EnableMarkerDetectionRequest.enable', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=13037,
  serialized_end=13083,
)


_ENABLEMARKERDETECTIONRESPONSE = _descriptor.Descriptor(
  name='EnableMarkerDetectionResponse',
  full_name='Anki.Vector.external_interface.EnableMarkerDetectionResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='Anki.Vector.external_interface.EnableMarkerDetectionResponse.status', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=13085,
  serialized_end=13180,
)


_ENABLEFACEDETECTIONREQUEST = _descriptor.Descriptor(
  name='EnableFaceDetectionRequest',
  full_name='Anki.Vector.external_interface.EnableFaceDetectionRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='enable', full_name='Anki.Vector.external_interface.EnableFaceDetectionRequest.enable', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='enable_smile_detection', full_name='Anki.Vector.external_interface.EnableFaceDetectionRequest.enable_smile_detection', index=1,
      number=2, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='enable_expression_estimation', full_name='Anki.Vector.external_interface.EnableFaceDetectionRequest.enable_expression_estimation', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='enable_blink_detection', full_name='Anki.Vector.external_interface.EnableFaceDetectionRequest.enable_blink_detection', index=3,
      number=4, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='enable_gaze_detection', full_name='Anki.Vector.external_interface.EnableFaceDetectionRequest.enable_gaze_detection', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=13183,
  serialized_end=13360,
)


_ENABLEFACEDETECTIONRESPONSE = _descriptor.Descriptor(
  name='EnableFaceDetectionResponse',
  full_name='Anki.Vector.external_interface.EnableFaceDetectionResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='Anki.Vector.external_interface.EnableFaceDetectionResponse.status', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=13362,
  serialized_end=13455,
)


_ENABLEMOTIONDETECTIONREQUEST = _descriptor.Descriptor(
  name='EnableMotionDetectionRequest',
  full_name='Anki.Vector.external_interface.EnableMotionDetectionRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='enable', full_name='Anki.Vector.external_interface.EnableMotionDetectionRequest.enable', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=13457,
  serialized_end=13503,
)


_ENABLEMOTIONDETECTIONRESPONSE = _descriptor.Descriptor(
  name='EnableMotionDetectionResponse',
  full_name='Anki.Vector.external_interface.EnableMotionDetectionResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='Anki.Vector.external_interface.EnableMotionDetectionResponse.status', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=13505,
  serialized_end=13600,
)


_ENABLEMIRRORMODEREQUEST = _descriptor.Descriptor(
  name='EnableMirrorModeRequest',
  full_name='Anki.Vector.external_interface.EnableMirrorModeRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='enable', full_name='Anki.Vector.external_interface.EnableMirrorModeRequest.enable', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=13602,
  serialized_end=13643,
)


_ENABLEMIRRORMODERESPONSE = _descriptor.Descriptor(
  name='EnableMirrorModeResponse',
  full_name='Anki.Vector.external_interface.EnableMirrorModeResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='Anki.Vector.external_interface.EnableMirrorModeResponse.status', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=13645,
  serialized_end=13735,
)


_MIRRORMODEDISABLED = _descriptor.Descriptor(
  name='MirrorModeDisabled',
  full_name='Anki.Vector.external_interface.MirrorModeDisabled',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=13737,
  serialized_end=13757,
)


_ENABLEIMAGESTREAMINGREQUEST = _descriptor.Descriptor(
  name='EnableImageStreamingRequest',
  full_name='Anki.Vector.external_interface.EnableImageStreamingRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='enable', full_name='Anki.Vector.external_interface.EnableImageStreamingRequest.enable', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=13759,
  serialized_end=13804,
)


_ENABLEIMAGESTREAMINGRESPONSE = _descriptor.Descriptor(
  name='EnableImageStreamingResponse',
  full_name='Anki.Vector.external_interface.EnableImageStreamingResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='Anki.Vector.external_interface.EnableImageStreamingResponse.status', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=13806,
  serialized_end=13900,
)


_ISIMAGESTREAMINGENABLEDREQUEST = _descriptor.Descriptor(
  name='IsImageStreamingEnabledRequest',
  full_name='Anki.Vector.external_interface.IsImageStreamingEnabledRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=13902,
  serialized_end=13934,
)


_ISIMAGESTREAMINGENABLEDRESPONSE = _descriptor.Descriptor(
  name='IsImageStreamingEnabledResponse',
  full_name='Anki.Vector.external_interface.IsImageStreamingEnabledResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='is_image_streaming_enabled', full_name='Anki.Vector.external_interface.IsImageStreamingEnabledResponse.is_image_streaming_enabled', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=13936,
  serialized_end=14005,
)


_VISIONMODESAUTODISABLED = _descriptor.Descriptor(
  name='VisionModesAutoDisabled',
  full_name='Anki.Vector.external_interface.VisionModesAutoDisabled',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=14007,
  serialized_end=14032,
)


_IMAGECHUNK = _descriptor.Descriptor(
  name='ImageChunk',
  full_name='Anki.Vector.external_interface.ImageChunk',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='frame_time_stamp', full_name='Anki.Vector.external_interface.ImageChunk.frame_time_stamp', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='image_id', full_name='Anki.Vector.external_interface.ImageChunk.image_id', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='width', full_name='Anki.Vector.external_interface.ImageChunk.width', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='height', full_name='Anki.Vector.external_interface.ImageChunk.height', index=3,
      number=4, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='image_encoding', full_name='Anki.Vector.external_interface.ImageChunk.image_encoding', index=4,
      number=5, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='display_index', full_name='Anki.Vector.external_interface.ImageChunk.display_index', index=5,
      number=6, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='image_chunk_count', full_name='Anki.Vector.external_interface.ImageChunk.image_chunk_count', index=6,
      number=7, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='chunk_id', full_name='Anki.Vector.external_interface.ImageChunk.chunk_id', index=7,
      number=8, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='data', full_name='Anki.Vector.external_interface.ImageChunk.data', index=8,
      number=9, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _IMAGECHUNK_IMAGEENCODING,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=14035,
  serialized_end=14500,
)


_CAMERAFEEDREQUEST = _descriptor.Descriptor(
  name='CameraFeedRequest',
  full_name='Anki.Vector.external_interface.CameraFeedRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=14502,
  serialized_end=14521,
)


_CAMERAFEEDRESPONSE = _descriptor.Descriptor(
  name='CameraFeedResponse',
  full_name='Anki.Vector.external_interface.CameraFeedResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='frame_time_stamp', full_name='Anki.Vector.external_interface.CameraFeedResponse.frame_time_stamp', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='image_id', full_name='Anki.Vector.external_interface.CameraFeedResponse.image_id', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='image_encoding', full_name='Anki.Vector.external_interface.CameraFeedResponse.image_encoding', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='data', full_name='Anki.Vector.external_interface.CameraFeedResponse.data', index=3,
      number=4, type=12, cpp_type=9, label=1,
      has_default_value=False, default_value=_b(""),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('\200\246\035\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=14524,
  serialized_end=14690,
)


_SETEYECOLORREQUEST = _descriptor.Descriptor(
  name='SetEyeColorRequest',
  full_name='Anki.Vector.external_interface.SetEyeColorRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='hue', full_name='Anki.Vector.external_interface.SetEyeColorRequest.hue', index=0,
      number=1, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='saturation', full_name='Anki.Vector.external_interface.SetEyeColorRequest.saturation', index=1,
      number=2, type=2, cpp_type=6, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=14692,
  serialized_end=14745,
)


_SETEYECOLORRESPONSE = _descriptor.Descriptor(
  name='SetEyeColorResponse',
  full_name='Anki.Vector.external_interface.SetEyeColorResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='Anki.Vector.external_interface.SetEyeColorResponse.status', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=14747,
  serialized_end=14832,
)


_SDKINITIALIZATIONREQUEST = _descriptor.Descriptor(
  name='SDKInitializationRequest',
  full_name='Anki.Vector.external_interface.SDKInitializationRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='sdk_module_version', full_name='Anki.Vector.external_interface.SDKInitializationRequest.sdk_module_version', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='python_version', full_name='Anki.Vector.external_interface.SDKInitializationRequest.python_version', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='python_implementation', full_name='Anki.Vector.external_interface.SDKInitializationRequest.python_implementation', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='os_version', full_name='Anki.Vector.external_interface.SDKInitializationRequest.os_version', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='cpu_version', full_name='Anki.Vector.external_interface.SDKInitializationRequest.cpu_version', index=4,
      number=5, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=14835,
  serialized_end=14985,
)


_SDKINITIALIZATIONRESPONSE = _descriptor.Descriptor(
  name='SDKInitializationResponse',
  full_name='Anki.Vector.external_interface.SDKInitializationResponse',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='Anki.Vector.external_interface.SDKInitializationResponse.status', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=14987,
  serialized_end=15078,
)

_DRIVEWHEELSRESPONSE.fields_by_name['status'].message_type = anki__vector_dot_messaging_dot_response__status__pb2._RESPONSESTATUS
_MOVEHEADRESPONSE.fields_by_name['status'].message_type = anki__vector_dot_messaging_dot_response__status__pb2._RESPONSESTATUS
_MOVELIFTRESPONSE.fields_by_name['status'].message_type = anki__vector_dot_messaging_dot_response__status__pb2._RESPONSESTATUS
_PLAYANIMATIONREQUEST.fields_by_name['animation'].message_type = _ANIMATION
_PLAYANIMATIONRESPONSE.fields_by_name['status'].message_type = anki__vector_dot_messaging_dot_response__status__pb2._RESPONSESTATUS
_PLAYANIMATIONRESPONSE.fields_by_name['result'].enum_type = _BEHAVIORRESULTS
_LISTANIMATIONSRESPONSE.fields_by_name['status'].message_type = anki__vector_dot_messaging_dot_response__status__pb2._RESPONSESTATUS
_LISTANIMATIONSRESPONSE.fields_by_name['animation_names'].message_type = _ANIMATION
_DISPLAYFACEIMAGERGBRESPONSE.fields_by_name['status'].message_type = anki__vector_dot_messaging_dot_response__status__pb2._RESPONSESTATUS
_STATUS.fields_by_name['meet_victor_face_scan_started'].message_type = _MEETVICTORFACESCANSTARTED
_STATUS.fields_by_name['meet_victor_face_scan_complete'].message_type = _MEETVICTORFACESCANCOMPLETE
_STATUS.fields_by_name['face_enrollment_completed'].message_type = _FACEENROLLMENTCOMPLETED
_STATUS.oneofs_by_name['status_type'].fields.append(
  _STATUS.fields_by_name['meet_victor_face_scan_started'])
_STATUS.fields_by_name['meet_victor_face_scan_started'].containing_oneof = _STATUS.oneofs_by_name['status_type']
_STATUS.oneofs_by_name['status_type'].fields.append(
  _STATUS.fields_by_name['meet_victor_face_scan_complete'])
_STATUS.fields_by_name['meet_victor_face_scan_complete'].containing_oneof = _STATUS.oneofs_by_name['status_type']
_STATUS.oneofs_by_name['status_type'].fields.append(
  _STATUS.fields_by_name['face_enrollment_completed'])
_STATUS.fields_by_name['face_enrollment_completed'].containing_oneof = _STATUS.oneofs_by_name['status_type']
_WAKEWORD.fields_by_name['wake_word_begin'].message_type = _WAKEWORDBEGIN
_WAKEWORD.fields_by_name['wake_word_end'].message_type = _WAKEWORDEND
_WAKEWORD.oneofs_by_name['wake_word_type'].fields.append(
  _WAKEWORD.fields_by_name['wake_word_begin'])
_WAKEWORD.fields_by_name['wake_word_begin'].containing_oneof = _WAKEWORD.oneofs_by_name['wake_word_type']
_WAKEWORD.oneofs_by_name['wake_word_type'].fields.append(
  _WAKEWORD.fields_by_name['wake_word_end'])
_WAKEWORD.fields_by_name['wake_word_end'].containing_oneof = _WAKEWORD.oneofs_by_name['wake_word_type']
_TIMESTAMPEDSTATUS.fields_by_name['status'].message_type = _STATUS
_ROBOTSTATE.fields_by_name['pose'].message_type = _POSESTRUCT
_ROBOTSTATE.fields_by_name['accel'].message_type = _ACCELDATA
_ROBOTSTATE.fields_by_name['gyro'].message_type = _GYRODATA
_ROBOTSTATE.fields_by_name['prox_data'].message_type = _PROXDATA
_ROBOTSTATE.fields_by_name['touch_data'].message_type = _TOUCHDATA
_ROBOTOBSERVEDFACE.fields_by_name['pose'].message_type = _POSESTRUCT
_ROBOTOBSERVEDFACE.fields_by_name['img_rect'].message_type = _CLADRECT
_ROBOTOBSERVEDFACE.fields_by_name['expression'].enum_type = _FACIALEXPRESSION
_ROBOTOBSERVEDFACE.fields_by_name['left_eye'].message_type = _CLADPOINT
_ROBOTOBSERVEDFACE.fields_by_name['right_eye'].message_type = _CLADPOINT
_ROBOTOBSERVEDFACE.fields_by_name['nose'].message_type = _CLADPOINT
_ROBOTOBSERVEDFACE.fields_by_name['mouth'].message_type = _CLADPOINT
_FACEENROLLMENTCOMPLETED.fields_by_name['result'].enum_type = _FACEENROLLMENTRESULT
_CANCELFACEENROLLMENTRESPONSE.fields_by_name['status'].message_type = anki__vector_dot_messaging_dot_response__status__pb2._RESPONSESTATUS
_REQUESTENROLLEDNAMESRESPONSE.fields_by_name['status'].message_type = anki__vector_dot_messaging_dot_response__status__pb2._RESPONSESTATUS
_REQUESTENROLLEDNAMESRESPONSE.fields_by_name['faces'].message_type = _LOADEDKNOWNFACE
_UPDATEENROLLEDFACEBYIDRESPONSE.fields_by_name['status'].message_type = anki__vector_dot_messaging_dot_response__status__pb2._RESPONSESTATUS
_ERASEENROLLEDFACEBYIDRESPONSE.fields_by_name['status'].message_type = anki__vector_dot_messaging_dot_response__status__pb2._RESPONSESTATUS
_ERASEALLENROLLEDFACESRESPONSE.fields_by_name['status'].message_type = anki__vector_dot_messaging_dot_response__status__pb2._RESPONSESTATUS
_SETFACETOENROLLRESPONSE.fields_by_name['status'].message_type = anki__vector_dot_messaging_dot_response__status__pb2._RESPONSESTATUS
_DRIVEOFFCHARGERRESPONSE.fields_by_name['status'].message_type = anki__vector_dot_messaging_dot_response__status__pb2._RESPONSESTATUS
_DRIVEOFFCHARGERRESPONSE.fields_by_name['result'].enum_type = _BEHAVIORRESULTS
_DRIVEONCHARGERRESPONSE.fields_by_name['status'].message_type = anki__vector_dot_messaging_dot_response__status__pb2._RESPONSESTATUS
_DRIVEONCHARGERRESPONSE.fields_by_name['result'].enum_type = _BEHAVIORRESULTS
_PHOTOSINFORESPONSE.fields_by_name['status'].message_type = anki__vector_dot_messaging_dot_response__status__pb2._RESPONSESTATUS
_PHOTOSINFORESPONSE.fields_by_name['photo_infos'].message_type = _PHOTOINFO
_PHOTORESPONSE.fields_by_name['status'].message_type = anki__vector_dot_messaging_dot_response__status__pb2._RESPONSESTATUS
_THUMBNAILRESPONSE.fields_by_name['status'].message_type = anki__vector_dot_messaging_dot_response__status__pb2._RESPONSESTATUS
_DELETEPHOTORESPONSE.fields_by_name['status'].message_type = anki__vector_dot_messaging_dot_response__status__pb2._RESPONSESTATUS
_ACTIONRESULT.fields_by_name['code'].enum_type = _ACTIONRESULT_ACTIONRESULTCODE
_ACTIONRESULT_ACTIONRESULTCODE.containing_type = _ACTIONRESULT
_GOTOPOSEREQUEST.fields_by_name['motion_prof'].message_type = _PATHMOTIONPROFILE
_GOTOPOSERESPONSE.fields_by_name['status'].message_type = anki__vector_dot_messaging_dot_response__status__pb2._RESPONSESTATUS
_GOTOPOSERESPONSE.fields_by_name['result'].message_type = _ACTIONRESULT
_DOCKWITHCUBEREQUEST.fields_by_name['alignment_type'].enum_type = _ALIGNMENTTYPE
_DOCKWITHCUBEREQUEST.fields_by_name['motion_prof'].message_type = _PATHMOTIONPROFILE
_DOCKWITHCUBERESPONSE.fields_by_name['status'].message_type = anki__vector_dot_messaging_dot_response__status__pb2._RESPONSESTATUS
_DOCKWITHCUBERESPONSE.fields_by_name['result'].message_type = _ACTIONRESULT
_DRIVESTRAIGHTRESPONSE.fields_by_name['status'].message_type = anki__vector_dot_messaging_dot_response__status__pb2._RESPONSESTATUS
_DRIVESTRAIGHTRESPONSE.fields_by_name['result'].message_type = _ACTIONRESULT
_TURNINPLACERESPONSE.fields_by_name['status'].message_type = anki__vector_dot_messaging_dot_response__status__pb2._RESPONSESTATUS
_TURNINPLACERESPONSE.fields_by_name['result'].message_type = _ACTIONRESULT
_SETHEADANGLERESPONSE.fields_by_name['status'].message_type = anki__vector_dot_messaging_dot_response__status__pb2._RESPONSESTATUS
_SETHEADANGLERESPONSE.fields_by_name['result'].message_type = _ACTIONRESULT
_SETLIFTHEIGHTRESPONSE.fields_by_name['status'].message_type = anki__vector_dot_messaging_dot_response__status__pb2._RESPONSESTATUS
_SETLIFTHEIGHTRESPONSE.fields_by_name['result'].message_type = _ACTIONRESULT
_BATTERYSTATERESPONSE.fields_by_name['status'].message_type = anki__vector_dot_messaging_dot_response__status__pb2._RESPONSESTATUS
_BATTERYSTATERESPONSE.fields_by_name['battery_level'].enum_type = _BATTERYLEVEL
_BATTERYSTATERESPONSE.fields_by_name['cube_battery'].message_type = _CUBEBATTERY
_CUBEBATTERY.fields_by_name['level'].enum_type = _CUBEBATTERY_CUBEBATTERYLEVEL
_CUBEBATTERY_CUBEBATTERYLEVEL.containing_type = _CUBEBATTERY
_VERSIONSTATERESPONSE.fields_by_name['status'].message_type = anki__vector_dot_messaging_dot_response__status__pb2._RESPONSESTATUS
_NETWORKSTATERESPONSE.fields_by_name['status'].message_type = anki__vector_dot_messaging_dot_response__status__pb2._RESPONSESTATUS
_NETWORKSTATERESPONSE.fields_by_name['network_stats'].message_type = _NETWORKSTATS
_SAYTEXTRESPONSE.fields_by_name['status'].message_type = anki__vector_dot_messaging_dot_response__status__pb2._RESPONSESTATUS
_SAYTEXTRESPONSE.fields_by_name['state'].enum_type = _SAYTEXTRESPONSE_UTTERANCESTATE
_SAYTEXTRESPONSE_UTTERANCESTATE.containing_type = _SAYTEXTRESPONSE
_AUDIOSENDMODEREQUEST.fields_by_name['mode'].enum_type = _AUDIOPROCESSINGMODE
_AUDIOSENDMODECHANGED.fields_by_name['mode'].enum_type = _AUDIOPROCESSINGMODE
_ENABLEMARKERDETECTIONRESPONSE.fields_by_name['status'].message_type = anki__vector_dot_messaging_dot_response__status__pb2._RESPONSESTATUS
_ENABLEFACEDETECTIONRESPONSE.fields_by_name['status'].message_type = anki__vector_dot_messaging_dot_response__status__pb2._RESPONSESTATUS
_ENABLEMOTIONDETECTIONRESPONSE.fields_by_name['status'].message_type = anki__vector_dot_messaging_dot_response__status__pb2._RESPONSESTATUS
_ENABLEMIRRORMODERESPONSE.fields_by_name['status'].message_type = anki__vector_dot_messaging_dot_response__status__pb2._RESPONSESTATUS
_ENABLEIMAGESTREAMINGRESPONSE.fields_by_name['status'].message_type = anki__vector_dot_messaging_dot_response__status__pb2._RESPONSESTATUS
_IMAGECHUNK.fields_by_name['image_encoding'].enum_type = _IMAGECHUNK_IMAGEENCODING
_IMAGECHUNK_IMAGEENCODING.containing_type = _IMAGECHUNK
_CAMERAFEEDRESPONSE.fields_by_name['image_encoding'].enum_type = _IMAGECHUNK_IMAGEENCODING
_SETEYECOLORRESPONSE.fields_by_name['status'].message_type = anki__vector_dot_messaging_dot_response__status__pb2._RESPONSESTATUS
_SDKINITIALIZATIONRESPONSE.fields_by_name['status'].message_type = anki__vector_dot_messaging_dot_response__status__pb2._RESPONSESTATUS
DESCRIPTOR.message_types_by_name['KeepAlivePing'] = _KEEPALIVEPING
DESCRIPTOR.message_types_by_name['Animation'] = _ANIMATION
DESCRIPTOR.message_types_by_name['DriveWheelsRequest'] = _DRIVEWHEELSREQUEST
DESCRIPTOR.message_types_by_name['DriveWheelsResponse'] = _DRIVEWHEELSRESPONSE
DESCRIPTOR.message_types_by_name['MoveHeadRequest'] = _MOVEHEADREQUEST
DESCRIPTOR.message_types_by_name['MoveHeadResponse'] = _MOVEHEADRESPONSE
DESCRIPTOR.message_types_by_name['MoveLiftRequest'] = _MOVELIFTREQUEST
DESCRIPTOR.message_types_by_name['MoveLiftResponse'] = _MOVELIFTRESPONSE
DESCRIPTOR.message_types_by_name['PlayAnimationRequest'] = _PLAYANIMATIONREQUEST
DESCRIPTOR.message_types_by_name['PlayAnimationResponse'] = _PLAYANIMATIONRESPONSE
DESCRIPTOR.message_types_by_name['ListAnimationsRequest'] = _LISTANIMATIONSREQUEST
DESCRIPTOR.message_types_by_name['ListAnimationsResponse'] = _LISTANIMATIONSRESPONSE
DESCRIPTOR.message_types_by_name['DisplayFaceImageRGBRequest'] = _DISPLAYFACEIMAGERGBREQUEST
DESCRIPTOR.message_types_by_name['DisplayFaceImageRGBResponse'] = _DISPLAYFACEIMAGERGBRESPONSE
DESCRIPTOR.message_types_by_name['MeetVictorFaceScanStarted'] = _MEETVICTORFACESCANSTARTED
DESCRIPTOR.message_types_by_name['MeetVictorFaceScanComplete'] = _MEETVICTORFACESCANCOMPLETE
DESCRIPTOR.message_types_by_name['Status'] = _STATUS
DESCRIPTOR.message_types_by_name['WakeWord'] = _WAKEWORD
DESCRIPTOR.message_types_by_name['TimeStampedStatus'] = _TIMESTAMPEDSTATUS
DESCRIPTOR.message_types_by_name['PoseStruct'] = _POSESTRUCT
DESCRIPTOR.message_types_by_name['AccelData'] = _ACCELDATA
DESCRIPTOR.message_types_by_name['GyroData'] = _GYRODATA
DESCRIPTOR.message_types_by_name['ProxData'] = _PROXDATA
DESCRIPTOR.message_types_by_name['TouchData'] = _TOUCHDATA
DESCRIPTOR.message_types_by_name['RobotState'] = _ROBOTSTATE
DESCRIPTOR.message_types_by_name['CladPoint'] = _CLADPOINT
DESCRIPTOR.message_types_by_name['CladRect'] = _CLADRECT
DESCRIPTOR.message_types_by_name['RobotObservedFace'] = _ROBOTOBSERVEDFACE
DESCRIPTOR.message_types_by_name['RobotChangedObservedFaceID'] = _ROBOTCHANGEDOBSERVEDFACEID
DESCRIPTOR.message_types_by_name['FaceEnrollmentCompleted'] = _FACEENROLLMENTCOMPLETED
DESCRIPTOR.message_types_by_name['CancelFaceEnrollmentRequest'] = _CANCELFACEENROLLMENTREQUEST
DESCRIPTOR.message_types_by_name['CancelFaceEnrollmentResponse'] = _CANCELFACEENROLLMENTRESPONSE
DESCRIPTOR.message_types_by_name['RequestEnrolledNamesRequest'] = _REQUESTENROLLEDNAMESREQUEST
DESCRIPTOR.message_types_by_name['LoadedKnownFace'] = _LOADEDKNOWNFACE
DESCRIPTOR.message_types_by_name['RobotRenamedEnrolledFace'] = _ROBOTRENAMEDENROLLEDFACE
DESCRIPTOR.message_types_by_name['RequestEnrolledNamesResponse'] = _REQUESTENROLLEDNAMESRESPONSE
DESCRIPTOR.message_types_by_name['UpdateEnrolledFaceByIDRequest'] = _UPDATEENROLLEDFACEBYIDREQUEST
DESCRIPTOR.message_types_by_name['UpdateEnrolledFaceByIDResponse'] = _UPDATEENROLLEDFACEBYIDRESPONSE
DESCRIPTOR.message_types_by_name['EraseEnrolledFaceByIDRequest'] = _ERASEENROLLEDFACEBYIDREQUEST
DESCRIPTOR.message_types_by_name['EraseEnrolledFaceByIDResponse'] = _ERASEENROLLEDFACEBYIDRESPONSE
DESCRIPTOR.message_types_by_name['EraseAllEnrolledFacesRequest'] = _ERASEALLENROLLEDFACESREQUEST
DESCRIPTOR.message_types_by_name['EraseAllEnrolledFacesResponse'] = _ERASEALLENROLLEDFACESRESPONSE
DESCRIPTOR.message_types_by_name['SetFaceToEnrollRequest'] = _SETFACETOENROLLREQUEST
DESCRIPTOR.message_types_by_name['SetFaceToEnrollResponse'] = _SETFACETOENROLLRESPONSE
DESCRIPTOR.message_types_by_name['DriveOffChargerRequest'] = _DRIVEOFFCHARGERREQUEST
DESCRIPTOR.message_types_by_name['DriveOffChargerResponse'] = _DRIVEOFFCHARGERRESPONSE
DESCRIPTOR.message_types_by_name['DriveOnChargerRequest'] = _DRIVEONCHARGERREQUEST
DESCRIPTOR.message_types_by_name['DriveOnChargerResponse'] = _DRIVEONCHARGERRESPONSE
DESCRIPTOR.message_types_by_name['WakeWordBegin'] = _WAKEWORDBEGIN
DESCRIPTOR.message_types_by_name['WakeWordEnd'] = _WAKEWORDEND
DESCRIPTOR.message_types_by_name['PhotoInfo'] = _PHOTOINFO
DESCRIPTOR.message_types_by_name['PhotosInfoRequest'] = _PHOTOSINFOREQUEST
DESCRIPTOR.message_types_by_name['PhotosInfoResponse'] = _PHOTOSINFORESPONSE
DESCRIPTOR.message_types_by_name['PhotoRequest'] = _PHOTOREQUEST
DESCRIPTOR.message_types_by_name['PhotoPathMessage'] = _PHOTOPATHMESSAGE
DESCRIPTOR.message_types_by_name['PhotoResponse'] = _PHOTORESPONSE
DESCRIPTOR.message_types_by_name['ThumbnailRequest'] = _THUMBNAILREQUEST
DESCRIPTOR.message_types_by_name['ThumbnailPathMessage'] = _THUMBNAILPATHMESSAGE
DESCRIPTOR.message_types_by_name['ThumbnailResponse'] = _THUMBNAILRESPONSE
DESCRIPTOR.message_types_by_name['DeletePhotoRequest'] = _DELETEPHOTOREQUEST
DESCRIPTOR.message_types_by_name['DeletePhotoResponse'] = _DELETEPHOTORESPONSE
DESCRIPTOR.message_types_by_name['PhotoTaken'] = _PHOTOTAKEN
DESCRIPTOR.message_types_by_name['PathMotionProfile'] = _PATHMOTIONPROFILE
DESCRIPTOR.message_types_by_name['ActionResult'] = _ACTIONRESULT
DESCRIPTOR.message_types_by_name['GoToPoseRequest'] = _GOTOPOSEREQUEST
DESCRIPTOR.message_types_by_name['GoToPoseResponse'] = _GOTOPOSERESPONSE
DESCRIPTOR.message_types_by_name['DockWithCubeRequest'] = _DOCKWITHCUBEREQUEST
DESCRIPTOR.message_types_by_name['DockWithCubeResponse'] = _DOCKWITHCUBERESPONSE
DESCRIPTOR.message_types_by_name['DriveStraightRequest'] = _DRIVESTRAIGHTREQUEST
DESCRIPTOR.message_types_by_name['DriveStraightResponse'] = _DRIVESTRAIGHTRESPONSE
DESCRIPTOR.message_types_by_name['TurnInPlaceRequest'] = _TURNINPLACEREQUEST
DESCRIPTOR.message_types_by_name['TurnInPlaceResponse'] = _TURNINPLACERESPONSE
DESCRIPTOR.message_types_by_name['SetHeadAngleRequest'] = _SETHEADANGLEREQUEST
DESCRIPTOR.message_types_by_name['SetHeadAngleResponse'] = _SETHEADANGLERESPONSE
DESCRIPTOR.message_types_by_name['SetLiftHeightRequest'] = _SETLIFTHEIGHTREQUEST
DESCRIPTOR.message_types_by_name['SetLiftHeightResponse'] = _SETLIFTHEIGHTRESPONSE
DESCRIPTOR.message_types_by_name['NetworkStats'] = _NETWORKSTATS
DESCRIPTOR.message_types_by_name['BatteryStateRequest'] = _BATTERYSTATEREQUEST
DESCRIPTOR.message_types_by_name['BatteryStateResponse'] = _BATTERYSTATERESPONSE
DESCRIPTOR.message_types_by_name['CubeBattery'] = _CUBEBATTERY
DESCRIPTOR.message_types_by_name['VersionStateRequest'] = _VERSIONSTATEREQUEST
DESCRIPTOR.message_types_by_name['VersionStateResponse'] = _VERSIONSTATERESPONSE
DESCRIPTOR.message_types_by_name['NetworkStateRequest'] = _NETWORKSTATEREQUEST
DESCRIPTOR.message_types_by_name['NetworkStateResponse'] = _NETWORKSTATERESPONSE
DESCRIPTOR.message_types_by_name['SayTextRequest'] = _SAYTEXTREQUEST
DESCRIPTOR.message_types_by_name['SayTextResponse'] = _SAYTEXTRESPONSE
DESCRIPTOR.message_types_by_name['StimulationInfo'] = _STIMULATIONINFO
DESCRIPTOR.message_types_by_name['AudioSendModeRequest'] = _AUDIOSENDMODEREQUEST
DESCRIPTOR.message_types_by_name['AudioSendModeChanged'] = _AUDIOSENDMODECHANGED
DESCRIPTOR.message_types_by_name['AudioChunk'] = _AUDIOCHUNK
DESCRIPTOR.message_types_by_name['AudioFeedRequest'] = _AUDIOFEEDREQUEST
DESCRIPTOR.message_types_by_name['AudioFeedResponse'] = _AUDIOFEEDRESPONSE
DESCRIPTOR.message_types_by_name['EnableMarkerDetectionRequest'] = _ENABLEMARKERDETECTIONREQUEST
DESCRIPTOR.message_types_by_name['EnableMarkerDetectionResponse'] = _ENABLEMARKERDETECTIONRESPONSE
DESCRIPTOR.message_types_by_name['EnableFaceDetectionRequest'] = _ENABLEFACEDETECTIONREQUEST
DESCRIPTOR.message_types_by_name['EnableFaceDetectionResponse'] = _ENABLEFACEDETECTIONRESPONSE
DESCRIPTOR.message_types_by_name['EnableMotionDetectionRequest'] = _ENABLEMOTIONDETECTIONREQUEST
DESCRIPTOR.message_types_by_name['EnableMotionDetectionResponse'] = _ENABLEMOTIONDETECTIONRESPONSE
DESCRIPTOR.message_types_by_name['EnableMirrorModeRequest'] = _ENABLEMIRRORMODEREQUEST
DESCRIPTOR.message_types_by_name['EnableMirrorModeResponse'] = _ENABLEMIRRORMODERESPONSE
DESCRIPTOR.message_types_by_name['MirrorModeDisabled'] = _MIRRORMODEDISABLED
DESCRIPTOR.message_types_by_name['EnableImageStreamingRequest'] = _ENABLEIMAGESTREAMINGREQUEST
DESCRIPTOR.message_types_by_name['EnableImageStreamingResponse'] = _ENABLEIMAGESTREAMINGRESPONSE
DESCRIPTOR.message_types_by_name['IsImageStreamingEnabledRequest'] = _ISIMAGESTREAMINGENABLEDREQUEST
DESCRIPTOR.message_types_by_name['IsImageStreamingEnabledResponse'] = _ISIMAGESTREAMINGENABLEDRESPONSE
DESCRIPTOR.message_types_by_name['VisionModesAutoDisabled'] = _VISIONMODESAUTODISABLED
DESCRIPTOR.message_types_by_name['ImageChunk'] = _IMAGECHUNK
DESCRIPTOR.message_types_by_name['CameraFeedRequest'] = _CAMERAFEEDREQUEST
DESCRIPTOR.message_types_by_name['CameraFeedResponse'] = _CAMERAFEEDRESPONSE
DESCRIPTOR.message_types_by_name['SetEyeColorRequest'] = _SETEYECOLORREQUEST
DESCRIPTOR.message_types_by_name['SetEyeColorResponse'] = _SETEYECOLORRESPONSE
DESCRIPTOR.message_types_by_name['SDKInitializationRequest'] = _SDKINITIALIZATIONREQUEST
DESCRIPTOR.message_types_by_name['SDKInitializationResponse'] = _SDKINITIALIZATIONRESPONSE
DESCRIPTOR.enum_types_by_name['RobotStatus'] = _ROBOTSTATUS
DESCRIPTOR.enum_types_by_name['FacialExpression'] = _FACIALEXPRESSION
DESCRIPTOR.enum_types_by_name['FaceEnrollmentResult'] = _FACEENROLLMENTRESULT
DESCRIPTOR.enum_types_by_name['BehaviorResults'] = _BEHAVIORRESULTS
DESCRIPTOR.enum_types_by_name['ActionTagConstants'] = _ACTIONTAGCONSTANTS
DESCRIPTOR.enum_types_by_name['AlignmentType'] = _ALIGNMENTTYPE
DESCRIPTOR.enum_types_by_name['BatteryLevel'] = _BATTERYLEVEL
DESCRIPTOR.enum_types_by_name['AudioConstants'] = _AUDIOCONSTANTS
DESCRIPTOR.enum_types_by_name['AudioProcessingMode'] = _AUDIOPROCESSINGMODE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

KeepAlivePing = _reflection.GeneratedProtocolMessageType('KeepAlivePing', (_message.Message,), dict(
  DESCRIPTOR = _KEEPALIVEPING,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.KeepAlivePing)
  ))
_sym_db.RegisterMessage(KeepAlivePing)

Animation = _reflection.GeneratedProtocolMessageType('Animation', (_message.Message,), dict(
  DESCRIPTOR = _ANIMATION,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.Animation)
  ))
_sym_db.RegisterMessage(Animation)

DriveWheelsRequest = _reflection.GeneratedProtocolMessageType('DriveWheelsRequest', (_message.Message,), dict(
  DESCRIPTOR = _DRIVEWHEELSREQUEST,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.DriveWheelsRequest)
  ))
_sym_db.RegisterMessage(DriveWheelsRequest)

DriveWheelsResponse = _reflection.GeneratedProtocolMessageType('DriveWheelsResponse', (_message.Message,), dict(
  DESCRIPTOR = _DRIVEWHEELSRESPONSE,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.DriveWheelsResponse)
  ))
_sym_db.RegisterMessage(DriveWheelsResponse)

MoveHeadRequest = _reflection.GeneratedProtocolMessageType('MoveHeadRequest', (_message.Message,), dict(
  DESCRIPTOR = _MOVEHEADREQUEST,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.MoveHeadRequest)
  ))
_sym_db.RegisterMessage(MoveHeadRequest)

MoveHeadResponse = _reflection.GeneratedProtocolMessageType('MoveHeadResponse', (_message.Message,), dict(
  DESCRIPTOR = _MOVEHEADRESPONSE,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.MoveHeadResponse)
  ))
_sym_db.RegisterMessage(MoveHeadResponse)

MoveLiftRequest = _reflection.GeneratedProtocolMessageType('MoveLiftRequest', (_message.Message,), dict(
  DESCRIPTOR = _MOVELIFTREQUEST,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.MoveLiftRequest)
  ))
_sym_db.RegisterMessage(MoveLiftRequest)

MoveLiftResponse = _reflection.GeneratedProtocolMessageType('MoveLiftResponse', (_message.Message,), dict(
  DESCRIPTOR = _MOVELIFTRESPONSE,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.MoveLiftResponse)
  ))
_sym_db.RegisterMessage(MoveLiftResponse)

PlayAnimationRequest = _reflection.GeneratedProtocolMessageType('PlayAnimationRequest', (_message.Message,), dict(
  DESCRIPTOR = _PLAYANIMATIONREQUEST,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.PlayAnimationRequest)
  ))
_sym_db.RegisterMessage(PlayAnimationRequest)

PlayAnimationResponse = _reflection.GeneratedProtocolMessageType('PlayAnimationResponse', (_message.Message,), dict(
  DESCRIPTOR = _PLAYANIMATIONRESPONSE,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.PlayAnimationResponse)
  ))
_sym_db.RegisterMessage(PlayAnimationResponse)

ListAnimationsRequest = _reflection.GeneratedProtocolMessageType('ListAnimationsRequest', (_message.Message,), dict(
  DESCRIPTOR = _LISTANIMATIONSREQUEST,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.ListAnimationsRequest)
  ))
_sym_db.RegisterMessage(ListAnimationsRequest)

ListAnimationsResponse = _reflection.GeneratedProtocolMessageType('ListAnimationsResponse', (_message.Message,), dict(
  DESCRIPTOR = _LISTANIMATIONSRESPONSE,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.ListAnimationsResponse)
  ))
_sym_db.RegisterMessage(ListAnimationsResponse)

DisplayFaceImageRGBRequest = _reflection.GeneratedProtocolMessageType('DisplayFaceImageRGBRequest', (_message.Message,), dict(
  DESCRIPTOR = _DISPLAYFACEIMAGERGBREQUEST,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.DisplayFaceImageRGBRequest)
  ))
_sym_db.RegisterMessage(DisplayFaceImageRGBRequest)

DisplayFaceImageRGBResponse = _reflection.GeneratedProtocolMessageType('DisplayFaceImageRGBResponse', (_message.Message,), dict(
  DESCRIPTOR = _DISPLAYFACEIMAGERGBRESPONSE,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.DisplayFaceImageRGBResponse)
  ))
_sym_db.RegisterMessage(DisplayFaceImageRGBResponse)

MeetVictorFaceScanStarted = _reflection.GeneratedProtocolMessageType('MeetVictorFaceScanStarted', (_message.Message,), dict(
  DESCRIPTOR = _MEETVICTORFACESCANSTARTED,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.MeetVictorFaceScanStarted)
  ))
_sym_db.RegisterMessage(MeetVictorFaceScanStarted)

MeetVictorFaceScanComplete = _reflection.GeneratedProtocolMessageType('MeetVictorFaceScanComplete', (_message.Message,), dict(
  DESCRIPTOR = _MEETVICTORFACESCANCOMPLETE,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.MeetVictorFaceScanComplete)
  ))
_sym_db.RegisterMessage(MeetVictorFaceScanComplete)

Status = _reflection.GeneratedProtocolMessageType('Status', (_message.Message,), dict(
  DESCRIPTOR = _STATUS,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.Status)
  ))
_sym_db.RegisterMessage(Status)

WakeWord = _reflection.GeneratedProtocolMessageType('WakeWord', (_message.Message,), dict(
  DESCRIPTOR = _WAKEWORD,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.WakeWord)
  ))
_sym_db.RegisterMessage(WakeWord)

TimeStampedStatus = _reflection.GeneratedProtocolMessageType('TimeStampedStatus', (_message.Message,), dict(
  DESCRIPTOR = _TIMESTAMPEDSTATUS,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.TimeStampedStatus)
  ))
_sym_db.RegisterMessage(TimeStampedStatus)

PoseStruct = _reflection.GeneratedProtocolMessageType('PoseStruct', (_message.Message,), dict(
  DESCRIPTOR = _POSESTRUCT,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.PoseStruct)
  ))
_sym_db.RegisterMessage(PoseStruct)

AccelData = _reflection.GeneratedProtocolMessageType('AccelData', (_message.Message,), dict(
  DESCRIPTOR = _ACCELDATA,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.AccelData)
  ))
_sym_db.RegisterMessage(AccelData)

GyroData = _reflection.GeneratedProtocolMessageType('GyroData', (_message.Message,), dict(
  DESCRIPTOR = _GYRODATA,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.GyroData)
  ))
_sym_db.RegisterMessage(GyroData)

ProxData = _reflection.GeneratedProtocolMessageType('ProxData', (_message.Message,), dict(
  DESCRIPTOR = _PROXDATA,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.ProxData)
  ))
_sym_db.RegisterMessage(ProxData)

TouchData = _reflection.GeneratedProtocolMessageType('TouchData', (_message.Message,), dict(
  DESCRIPTOR = _TOUCHDATA,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.TouchData)
  ))
_sym_db.RegisterMessage(TouchData)

RobotState = _reflection.GeneratedProtocolMessageType('RobotState', (_message.Message,), dict(
  DESCRIPTOR = _ROBOTSTATE,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.RobotState)
  ))
_sym_db.RegisterMessage(RobotState)

CladPoint = _reflection.GeneratedProtocolMessageType('CladPoint', (_message.Message,), dict(
  DESCRIPTOR = _CLADPOINT,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.CladPoint)
  ))
_sym_db.RegisterMessage(CladPoint)

CladRect = _reflection.GeneratedProtocolMessageType('CladRect', (_message.Message,), dict(
  DESCRIPTOR = _CLADRECT,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.CladRect)
  ))
_sym_db.RegisterMessage(CladRect)

RobotObservedFace = _reflection.GeneratedProtocolMessageType('RobotObservedFace', (_message.Message,), dict(
  DESCRIPTOR = _ROBOTOBSERVEDFACE,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.RobotObservedFace)
  ))
_sym_db.RegisterMessage(RobotObservedFace)

RobotChangedObservedFaceID = _reflection.GeneratedProtocolMessageType('RobotChangedObservedFaceID', (_message.Message,), dict(
  DESCRIPTOR = _ROBOTCHANGEDOBSERVEDFACEID,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.RobotChangedObservedFaceID)
  ))
_sym_db.RegisterMessage(RobotChangedObservedFaceID)

FaceEnrollmentCompleted = _reflection.GeneratedProtocolMessageType('FaceEnrollmentCompleted', (_message.Message,), dict(
  DESCRIPTOR = _FACEENROLLMENTCOMPLETED,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.FaceEnrollmentCompleted)
  ))
_sym_db.RegisterMessage(FaceEnrollmentCompleted)

CancelFaceEnrollmentRequest = _reflection.GeneratedProtocolMessageType('CancelFaceEnrollmentRequest', (_message.Message,), dict(
  DESCRIPTOR = _CANCELFACEENROLLMENTREQUEST,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.CancelFaceEnrollmentRequest)
  ))
_sym_db.RegisterMessage(CancelFaceEnrollmentRequest)

CancelFaceEnrollmentResponse = _reflection.GeneratedProtocolMessageType('CancelFaceEnrollmentResponse', (_message.Message,), dict(
  DESCRIPTOR = _CANCELFACEENROLLMENTRESPONSE,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.CancelFaceEnrollmentResponse)
  ))
_sym_db.RegisterMessage(CancelFaceEnrollmentResponse)

RequestEnrolledNamesRequest = _reflection.GeneratedProtocolMessageType('RequestEnrolledNamesRequest', (_message.Message,), dict(
  DESCRIPTOR = _REQUESTENROLLEDNAMESREQUEST,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.RequestEnrolledNamesRequest)
  ))
_sym_db.RegisterMessage(RequestEnrolledNamesRequest)

LoadedKnownFace = _reflection.GeneratedProtocolMessageType('LoadedKnownFace', (_message.Message,), dict(
  DESCRIPTOR = _LOADEDKNOWNFACE,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.LoadedKnownFace)
  ))
_sym_db.RegisterMessage(LoadedKnownFace)

RobotRenamedEnrolledFace = _reflection.GeneratedProtocolMessageType('RobotRenamedEnrolledFace', (_message.Message,), dict(
  DESCRIPTOR = _ROBOTRENAMEDENROLLEDFACE,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.RobotRenamedEnrolledFace)
  ))
_sym_db.RegisterMessage(RobotRenamedEnrolledFace)

RequestEnrolledNamesResponse = _reflection.GeneratedProtocolMessageType('RequestEnrolledNamesResponse', (_message.Message,), dict(
  DESCRIPTOR = _REQUESTENROLLEDNAMESRESPONSE,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.RequestEnrolledNamesResponse)
  ))
_sym_db.RegisterMessage(RequestEnrolledNamesResponse)

UpdateEnrolledFaceByIDRequest = _reflection.GeneratedProtocolMessageType('UpdateEnrolledFaceByIDRequest', (_message.Message,), dict(
  DESCRIPTOR = _UPDATEENROLLEDFACEBYIDREQUEST,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.UpdateEnrolledFaceByIDRequest)
  ))
_sym_db.RegisterMessage(UpdateEnrolledFaceByIDRequest)

UpdateEnrolledFaceByIDResponse = _reflection.GeneratedProtocolMessageType('UpdateEnrolledFaceByIDResponse', (_message.Message,), dict(
  DESCRIPTOR = _UPDATEENROLLEDFACEBYIDRESPONSE,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.UpdateEnrolledFaceByIDResponse)
  ))
_sym_db.RegisterMessage(UpdateEnrolledFaceByIDResponse)

EraseEnrolledFaceByIDRequest = _reflection.GeneratedProtocolMessageType('EraseEnrolledFaceByIDRequest', (_message.Message,), dict(
  DESCRIPTOR = _ERASEENROLLEDFACEBYIDREQUEST,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.EraseEnrolledFaceByIDRequest)
  ))
_sym_db.RegisterMessage(EraseEnrolledFaceByIDRequest)

EraseEnrolledFaceByIDResponse = _reflection.GeneratedProtocolMessageType('EraseEnrolledFaceByIDResponse', (_message.Message,), dict(
  DESCRIPTOR = _ERASEENROLLEDFACEBYIDRESPONSE,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.EraseEnrolledFaceByIDResponse)
  ))
_sym_db.RegisterMessage(EraseEnrolledFaceByIDResponse)

EraseAllEnrolledFacesRequest = _reflection.GeneratedProtocolMessageType('EraseAllEnrolledFacesRequest', (_message.Message,), dict(
  DESCRIPTOR = _ERASEALLENROLLEDFACESREQUEST,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.EraseAllEnrolledFacesRequest)
  ))
_sym_db.RegisterMessage(EraseAllEnrolledFacesRequest)

EraseAllEnrolledFacesResponse = _reflection.GeneratedProtocolMessageType('EraseAllEnrolledFacesResponse', (_message.Message,), dict(
  DESCRIPTOR = _ERASEALLENROLLEDFACESRESPONSE,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.EraseAllEnrolledFacesResponse)
  ))
_sym_db.RegisterMessage(EraseAllEnrolledFacesResponse)

SetFaceToEnrollRequest = _reflection.GeneratedProtocolMessageType('SetFaceToEnrollRequest', (_message.Message,), dict(
  DESCRIPTOR = _SETFACETOENROLLREQUEST,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.SetFaceToEnrollRequest)
  ))
_sym_db.RegisterMessage(SetFaceToEnrollRequest)

SetFaceToEnrollResponse = _reflection.GeneratedProtocolMessageType('SetFaceToEnrollResponse', (_message.Message,), dict(
  DESCRIPTOR = _SETFACETOENROLLRESPONSE,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.SetFaceToEnrollResponse)
  ))
_sym_db.RegisterMessage(SetFaceToEnrollResponse)

DriveOffChargerRequest = _reflection.GeneratedProtocolMessageType('DriveOffChargerRequest', (_message.Message,), dict(
  DESCRIPTOR = _DRIVEOFFCHARGERREQUEST,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.DriveOffChargerRequest)
  ))
_sym_db.RegisterMessage(DriveOffChargerRequest)

DriveOffChargerResponse = _reflection.GeneratedProtocolMessageType('DriveOffChargerResponse', (_message.Message,), dict(
  DESCRIPTOR = _DRIVEOFFCHARGERRESPONSE,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.DriveOffChargerResponse)
  ))
_sym_db.RegisterMessage(DriveOffChargerResponse)

DriveOnChargerRequest = _reflection.GeneratedProtocolMessageType('DriveOnChargerRequest', (_message.Message,), dict(
  DESCRIPTOR = _DRIVEONCHARGERREQUEST,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.DriveOnChargerRequest)
  ))
_sym_db.RegisterMessage(DriveOnChargerRequest)

DriveOnChargerResponse = _reflection.GeneratedProtocolMessageType('DriveOnChargerResponse', (_message.Message,), dict(
  DESCRIPTOR = _DRIVEONCHARGERRESPONSE,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.DriveOnChargerResponse)
  ))
_sym_db.RegisterMessage(DriveOnChargerResponse)

WakeWordBegin = _reflection.GeneratedProtocolMessageType('WakeWordBegin', (_message.Message,), dict(
  DESCRIPTOR = _WAKEWORDBEGIN,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.WakeWordBegin)
  ))
_sym_db.RegisterMessage(WakeWordBegin)

WakeWordEnd = _reflection.GeneratedProtocolMessageType('WakeWordEnd', (_message.Message,), dict(
  DESCRIPTOR = _WAKEWORDEND,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.WakeWordEnd)
  ))
_sym_db.RegisterMessage(WakeWordEnd)

PhotoInfo = _reflection.GeneratedProtocolMessageType('PhotoInfo', (_message.Message,), dict(
  DESCRIPTOR = _PHOTOINFO,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.PhotoInfo)
  ))
_sym_db.RegisterMessage(PhotoInfo)

PhotosInfoRequest = _reflection.GeneratedProtocolMessageType('PhotosInfoRequest', (_message.Message,), dict(
  DESCRIPTOR = _PHOTOSINFOREQUEST,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.PhotosInfoRequest)
  ))
_sym_db.RegisterMessage(PhotosInfoRequest)

PhotosInfoResponse = _reflection.GeneratedProtocolMessageType('PhotosInfoResponse', (_message.Message,), dict(
  DESCRIPTOR = _PHOTOSINFORESPONSE,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.PhotosInfoResponse)
  ))
_sym_db.RegisterMessage(PhotosInfoResponse)

PhotoRequest = _reflection.GeneratedProtocolMessageType('PhotoRequest', (_message.Message,), dict(
  DESCRIPTOR = _PHOTOREQUEST,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.PhotoRequest)
  ))
_sym_db.RegisterMessage(PhotoRequest)

PhotoPathMessage = _reflection.GeneratedProtocolMessageType('PhotoPathMessage', (_message.Message,), dict(
  DESCRIPTOR = _PHOTOPATHMESSAGE,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.PhotoPathMessage)
  ))
_sym_db.RegisterMessage(PhotoPathMessage)

PhotoResponse = _reflection.GeneratedProtocolMessageType('PhotoResponse', (_message.Message,), dict(
  DESCRIPTOR = _PHOTORESPONSE,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.PhotoResponse)
  ))
_sym_db.RegisterMessage(PhotoResponse)

ThumbnailRequest = _reflection.GeneratedProtocolMessageType('ThumbnailRequest', (_message.Message,), dict(
  DESCRIPTOR = _THUMBNAILREQUEST,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.ThumbnailRequest)
  ))
_sym_db.RegisterMessage(ThumbnailRequest)

ThumbnailPathMessage = _reflection.GeneratedProtocolMessageType('ThumbnailPathMessage', (_message.Message,), dict(
  DESCRIPTOR = _THUMBNAILPATHMESSAGE,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.ThumbnailPathMessage)
  ))
_sym_db.RegisterMessage(ThumbnailPathMessage)

ThumbnailResponse = _reflection.GeneratedProtocolMessageType('ThumbnailResponse', (_message.Message,), dict(
  DESCRIPTOR = _THUMBNAILRESPONSE,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.ThumbnailResponse)
  ))
_sym_db.RegisterMessage(ThumbnailResponse)

DeletePhotoRequest = _reflection.GeneratedProtocolMessageType('DeletePhotoRequest', (_message.Message,), dict(
  DESCRIPTOR = _DELETEPHOTOREQUEST,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.DeletePhotoRequest)
  ))
_sym_db.RegisterMessage(DeletePhotoRequest)

DeletePhotoResponse = _reflection.GeneratedProtocolMessageType('DeletePhotoResponse', (_message.Message,), dict(
  DESCRIPTOR = _DELETEPHOTORESPONSE,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.DeletePhotoResponse)
  ))
_sym_db.RegisterMessage(DeletePhotoResponse)

PhotoTaken = _reflection.GeneratedProtocolMessageType('PhotoTaken', (_message.Message,), dict(
  DESCRIPTOR = _PHOTOTAKEN,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.PhotoTaken)
  ))
_sym_db.RegisterMessage(PhotoTaken)

PathMotionProfile = _reflection.GeneratedProtocolMessageType('PathMotionProfile', (_message.Message,), dict(
  DESCRIPTOR = _PATHMOTIONPROFILE,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.PathMotionProfile)
  ))
_sym_db.RegisterMessage(PathMotionProfile)

ActionResult = _reflection.GeneratedProtocolMessageType('ActionResult', (_message.Message,), dict(
  DESCRIPTOR = _ACTIONRESULT,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.ActionResult)
  ))
_sym_db.RegisterMessage(ActionResult)

GoToPoseRequest = _reflection.GeneratedProtocolMessageType('GoToPoseRequest', (_message.Message,), dict(
  DESCRIPTOR = _GOTOPOSEREQUEST,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.GoToPoseRequest)
  ))
_sym_db.RegisterMessage(GoToPoseRequest)

GoToPoseResponse = _reflection.GeneratedProtocolMessageType('GoToPoseResponse', (_message.Message,), dict(
  DESCRIPTOR = _GOTOPOSERESPONSE,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.GoToPoseResponse)
  ))
_sym_db.RegisterMessage(GoToPoseResponse)

DockWithCubeRequest = _reflection.GeneratedProtocolMessageType('DockWithCubeRequest', (_message.Message,), dict(
  DESCRIPTOR = _DOCKWITHCUBEREQUEST,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.DockWithCubeRequest)
  ))
_sym_db.RegisterMessage(DockWithCubeRequest)

DockWithCubeResponse = _reflection.GeneratedProtocolMessageType('DockWithCubeResponse', (_message.Message,), dict(
  DESCRIPTOR = _DOCKWITHCUBERESPONSE,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.DockWithCubeResponse)
  ))
_sym_db.RegisterMessage(DockWithCubeResponse)

DriveStraightRequest = _reflection.GeneratedProtocolMessageType('DriveStraightRequest', (_message.Message,), dict(
  DESCRIPTOR = _DRIVESTRAIGHTREQUEST,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.DriveStraightRequest)
  ))
_sym_db.RegisterMessage(DriveStraightRequest)

DriveStraightResponse = _reflection.GeneratedProtocolMessageType('DriveStraightResponse', (_message.Message,), dict(
  DESCRIPTOR = _DRIVESTRAIGHTRESPONSE,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.DriveStraightResponse)
  ))
_sym_db.RegisterMessage(DriveStraightResponse)

TurnInPlaceRequest = _reflection.GeneratedProtocolMessageType('TurnInPlaceRequest', (_message.Message,), dict(
  DESCRIPTOR = _TURNINPLACEREQUEST,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.TurnInPlaceRequest)
  ))
_sym_db.RegisterMessage(TurnInPlaceRequest)

TurnInPlaceResponse = _reflection.GeneratedProtocolMessageType('TurnInPlaceResponse', (_message.Message,), dict(
  DESCRIPTOR = _TURNINPLACERESPONSE,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.TurnInPlaceResponse)
  ))
_sym_db.RegisterMessage(TurnInPlaceResponse)

SetHeadAngleRequest = _reflection.GeneratedProtocolMessageType('SetHeadAngleRequest', (_message.Message,), dict(
  DESCRIPTOR = _SETHEADANGLEREQUEST,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.SetHeadAngleRequest)
  ))
_sym_db.RegisterMessage(SetHeadAngleRequest)

SetHeadAngleResponse = _reflection.GeneratedProtocolMessageType('SetHeadAngleResponse', (_message.Message,), dict(
  DESCRIPTOR = _SETHEADANGLERESPONSE,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.SetHeadAngleResponse)
  ))
_sym_db.RegisterMessage(SetHeadAngleResponse)

SetLiftHeightRequest = _reflection.GeneratedProtocolMessageType('SetLiftHeightRequest', (_message.Message,), dict(
  DESCRIPTOR = _SETLIFTHEIGHTREQUEST,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.SetLiftHeightRequest)
  ))
_sym_db.RegisterMessage(SetLiftHeightRequest)

SetLiftHeightResponse = _reflection.GeneratedProtocolMessageType('SetLiftHeightResponse', (_message.Message,), dict(
  DESCRIPTOR = _SETLIFTHEIGHTRESPONSE,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.SetLiftHeightResponse)
  ))
_sym_db.RegisterMessage(SetLiftHeightResponse)

NetworkStats = _reflection.GeneratedProtocolMessageType('NetworkStats', (_message.Message,), dict(
  DESCRIPTOR = _NETWORKSTATS,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.NetworkStats)
  ))
_sym_db.RegisterMessage(NetworkStats)

BatteryStateRequest = _reflection.GeneratedProtocolMessageType('BatteryStateRequest', (_message.Message,), dict(
  DESCRIPTOR = _BATTERYSTATEREQUEST,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.BatteryStateRequest)
  ))
_sym_db.RegisterMessage(BatteryStateRequest)

BatteryStateResponse = _reflection.GeneratedProtocolMessageType('BatteryStateResponse', (_message.Message,), dict(
  DESCRIPTOR = _BATTERYSTATERESPONSE,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.BatteryStateResponse)
  ))
_sym_db.RegisterMessage(BatteryStateResponse)

CubeBattery = _reflection.GeneratedProtocolMessageType('CubeBattery', (_message.Message,), dict(
  DESCRIPTOR = _CUBEBATTERY,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.CubeBattery)
  ))
_sym_db.RegisterMessage(CubeBattery)

VersionStateRequest = _reflection.GeneratedProtocolMessageType('VersionStateRequest', (_message.Message,), dict(
  DESCRIPTOR = _VERSIONSTATEREQUEST,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.VersionStateRequest)
  ))
_sym_db.RegisterMessage(VersionStateRequest)

VersionStateResponse = _reflection.GeneratedProtocolMessageType('VersionStateResponse', (_message.Message,), dict(
  DESCRIPTOR = _VERSIONSTATERESPONSE,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.VersionStateResponse)
  ))
_sym_db.RegisterMessage(VersionStateResponse)

NetworkStateRequest = _reflection.GeneratedProtocolMessageType('NetworkStateRequest', (_message.Message,), dict(
  DESCRIPTOR = _NETWORKSTATEREQUEST,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.NetworkStateRequest)
  ))
_sym_db.RegisterMessage(NetworkStateRequest)

NetworkStateResponse = _reflection.GeneratedProtocolMessageType('NetworkStateResponse', (_message.Message,), dict(
  DESCRIPTOR = _NETWORKSTATERESPONSE,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.NetworkStateResponse)
  ))
_sym_db.RegisterMessage(NetworkStateResponse)

SayTextRequest = _reflection.GeneratedProtocolMessageType('SayTextRequest', (_message.Message,), dict(
  DESCRIPTOR = _SAYTEXTREQUEST,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.SayTextRequest)
  ))
_sym_db.RegisterMessage(SayTextRequest)

SayTextResponse = _reflection.GeneratedProtocolMessageType('SayTextResponse', (_message.Message,), dict(
  DESCRIPTOR = _SAYTEXTRESPONSE,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.SayTextResponse)
  ))
_sym_db.RegisterMessage(SayTextResponse)

StimulationInfo = _reflection.GeneratedProtocolMessageType('StimulationInfo', (_message.Message,), dict(
  DESCRIPTOR = _STIMULATIONINFO,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.StimulationInfo)
  ))
_sym_db.RegisterMessage(StimulationInfo)

AudioSendModeRequest = _reflection.GeneratedProtocolMessageType('AudioSendModeRequest', (_message.Message,), dict(
  DESCRIPTOR = _AUDIOSENDMODEREQUEST,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.AudioSendModeRequest)
  ))
_sym_db.RegisterMessage(AudioSendModeRequest)

AudioSendModeChanged = _reflection.GeneratedProtocolMessageType('AudioSendModeChanged', (_message.Message,), dict(
  DESCRIPTOR = _AUDIOSENDMODECHANGED,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.AudioSendModeChanged)
  ))
_sym_db.RegisterMessage(AudioSendModeChanged)

AudioChunk = _reflection.GeneratedProtocolMessageType('AudioChunk', (_message.Message,), dict(
  DESCRIPTOR = _AUDIOCHUNK,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.AudioChunk)
  ))
_sym_db.RegisterMessage(AudioChunk)

AudioFeedRequest = _reflection.GeneratedProtocolMessageType('AudioFeedRequest', (_message.Message,), dict(
  DESCRIPTOR = _AUDIOFEEDREQUEST,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.AudioFeedRequest)
  ))
_sym_db.RegisterMessage(AudioFeedRequest)

AudioFeedResponse = _reflection.GeneratedProtocolMessageType('AudioFeedResponse', (_message.Message,), dict(
  DESCRIPTOR = _AUDIOFEEDRESPONSE,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.AudioFeedResponse)
  ))
_sym_db.RegisterMessage(AudioFeedResponse)

EnableMarkerDetectionRequest = _reflection.GeneratedProtocolMessageType('EnableMarkerDetectionRequest', (_message.Message,), dict(
  DESCRIPTOR = _ENABLEMARKERDETECTIONREQUEST,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.EnableMarkerDetectionRequest)
  ))
_sym_db.RegisterMessage(EnableMarkerDetectionRequest)

EnableMarkerDetectionResponse = _reflection.GeneratedProtocolMessageType('EnableMarkerDetectionResponse', (_message.Message,), dict(
  DESCRIPTOR = _ENABLEMARKERDETECTIONRESPONSE,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.EnableMarkerDetectionResponse)
  ))
_sym_db.RegisterMessage(EnableMarkerDetectionResponse)

EnableFaceDetectionRequest = _reflection.GeneratedProtocolMessageType('EnableFaceDetectionRequest', (_message.Message,), dict(
  DESCRIPTOR = _ENABLEFACEDETECTIONREQUEST,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.EnableFaceDetectionRequest)
  ))
_sym_db.RegisterMessage(EnableFaceDetectionRequest)

EnableFaceDetectionResponse = _reflection.GeneratedProtocolMessageType('EnableFaceDetectionResponse', (_message.Message,), dict(
  DESCRIPTOR = _ENABLEFACEDETECTIONRESPONSE,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.EnableFaceDetectionResponse)
  ))
_sym_db.RegisterMessage(EnableFaceDetectionResponse)

EnableMotionDetectionRequest = _reflection.GeneratedProtocolMessageType('EnableMotionDetectionRequest', (_message.Message,), dict(
  DESCRIPTOR = _ENABLEMOTIONDETECTIONREQUEST,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.EnableMotionDetectionRequest)
  ))
_sym_db.RegisterMessage(EnableMotionDetectionRequest)

EnableMotionDetectionResponse = _reflection.GeneratedProtocolMessageType('EnableMotionDetectionResponse', (_message.Message,), dict(
  DESCRIPTOR = _ENABLEMOTIONDETECTIONRESPONSE,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.EnableMotionDetectionResponse)
  ))
_sym_db.RegisterMessage(EnableMotionDetectionResponse)

EnableMirrorModeRequest = _reflection.GeneratedProtocolMessageType('EnableMirrorModeRequest', (_message.Message,), dict(
  DESCRIPTOR = _ENABLEMIRRORMODEREQUEST,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.EnableMirrorModeRequest)
  ))
_sym_db.RegisterMessage(EnableMirrorModeRequest)

EnableMirrorModeResponse = _reflection.GeneratedProtocolMessageType('EnableMirrorModeResponse', (_message.Message,), dict(
  DESCRIPTOR = _ENABLEMIRRORMODERESPONSE,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.EnableMirrorModeResponse)
  ))
_sym_db.RegisterMessage(EnableMirrorModeResponse)

MirrorModeDisabled = _reflection.GeneratedProtocolMessageType('MirrorModeDisabled', (_message.Message,), dict(
  DESCRIPTOR = _MIRRORMODEDISABLED,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.MirrorModeDisabled)
  ))
_sym_db.RegisterMessage(MirrorModeDisabled)

EnableImageStreamingRequest = _reflection.GeneratedProtocolMessageType('EnableImageStreamingRequest', (_message.Message,), dict(
  DESCRIPTOR = _ENABLEIMAGESTREAMINGREQUEST,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.EnableImageStreamingRequest)
  ))
_sym_db.RegisterMessage(EnableImageStreamingRequest)

EnableImageStreamingResponse = _reflection.GeneratedProtocolMessageType('EnableImageStreamingResponse', (_message.Message,), dict(
  DESCRIPTOR = _ENABLEIMAGESTREAMINGRESPONSE,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.EnableImageStreamingResponse)
  ))
_sym_db.RegisterMessage(EnableImageStreamingResponse)

IsImageStreamingEnabledRequest = _reflection.GeneratedProtocolMessageType('IsImageStreamingEnabledRequest', (_message.Message,), dict(
  DESCRIPTOR = _ISIMAGESTREAMINGENABLEDREQUEST,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.IsImageStreamingEnabledRequest)
  ))
_sym_db.RegisterMessage(IsImageStreamingEnabledRequest)

IsImageStreamingEnabledResponse = _reflection.GeneratedProtocolMessageType('IsImageStreamingEnabledResponse', (_message.Message,), dict(
  DESCRIPTOR = _ISIMAGESTREAMINGENABLEDRESPONSE,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.IsImageStreamingEnabledResponse)
  ))
_sym_db.RegisterMessage(IsImageStreamingEnabledResponse)

VisionModesAutoDisabled = _reflection.GeneratedProtocolMessageType('VisionModesAutoDisabled', (_message.Message,), dict(
  DESCRIPTOR = _VISIONMODESAUTODISABLED,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.VisionModesAutoDisabled)
  ))
_sym_db.RegisterMessage(VisionModesAutoDisabled)

ImageChunk = _reflection.GeneratedProtocolMessageType('ImageChunk', (_message.Message,), dict(
  DESCRIPTOR = _IMAGECHUNK,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.ImageChunk)
  ))
_sym_db.RegisterMessage(ImageChunk)

CameraFeedRequest = _reflection.GeneratedProtocolMessageType('CameraFeedRequest', (_message.Message,), dict(
  DESCRIPTOR = _CAMERAFEEDREQUEST,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.CameraFeedRequest)
  ))
_sym_db.RegisterMessage(CameraFeedRequest)

CameraFeedResponse = _reflection.GeneratedProtocolMessageType('CameraFeedResponse', (_message.Message,), dict(
  DESCRIPTOR = _CAMERAFEEDRESPONSE,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.CameraFeedResponse)
  ))
_sym_db.RegisterMessage(CameraFeedResponse)

SetEyeColorRequest = _reflection.GeneratedProtocolMessageType('SetEyeColorRequest', (_message.Message,), dict(
  DESCRIPTOR = _SETEYECOLORREQUEST,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.SetEyeColorRequest)
  ))
_sym_db.RegisterMessage(SetEyeColorRequest)

SetEyeColorResponse = _reflection.GeneratedProtocolMessageType('SetEyeColorResponse', (_message.Message,), dict(
  DESCRIPTOR = _SETEYECOLORRESPONSE,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.SetEyeColorResponse)
  ))
_sym_db.RegisterMessage(SetEyeColorResponse)

SDKInitializationRequest = _reflection.GeneratedProtocolMessageType('SDKInitializationRequest', (_message.Message,), dict(
  DESCRIPTOR = _SDKINITIALIZATIONREQUEST,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.SDKInitializationRequest)
  ))
_sym_db.RegisterMessage(SDKInitializationRequest)

SDKInitializationResponse = _reflection.GeneratedProtocolMessageType('SDKInitializationResponse', (_message.Message,), dict(
  DESCRIPTOR = _SDKINITIALIZATIONRESPONSE,
  __module__ = 'anki_vector.messaging.messages_pb2'
  # @@protoc_insertion_point(class_scope:Anki.Vector.external_interface.SDKInitializationResponse)
  ))
_sym_db.RegisterMessage(SDKInitializationResponse)


_FACIALEXPRESSION.has_options = True
_FACIALEXPRESSION._options = _descriptor._ParseOptions(descriptor_pb2.EnumOptions(), _b('\020\001'))
_AUDIOFEEDRESPONSE.has_options = True
_AUDIOFEEDRESPONSE._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('\200\246\035\001'))
_CAMERAFEEDRESPONSE.has_options = True
_CAMERAFEEDRESPONSE._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('\200\246\035\001'))
# @@protoc_insertion_point(module_scope)
